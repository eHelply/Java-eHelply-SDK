openapi: 3.0.3
info:
  contact:
    email: support@ehelply.com
    name: Support
    url: https://superstack.ehelply.com/support
  description: eHelply SDK for SuperStack Services
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://superstack.ehelply.com/support/legal/terms
  title: eHelply SDK - 1.1.85
  version: 1.1.85
servers:
- description: eHelply / SuperStack Production
  url: https://api.prod.ehelply.com
- description: eHelply / SuperStack Testing
  url: https://api.test.ehelply.com
- description: eHelply / SuperStack Development
  url: http://localhost
paths:
  /appointments/appointments/{appointment_uuid}/entities/{entity_uuid}:
    delete:
      operationId: detachEntityFromAppointment
      parameters:
      - explode: false
        in: path
        name: appointment_uuid
        required: true
        schema:
          title: Appointment Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Detachentityfromappointment
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Detach Entity From Appointment
      x-accepts: application/json
    post:
      operationId: attachEntityToAppointment
      parameters:
      - explode: false
        in: path
        name: appointment_uuid
        required: true
        schema:
          title: Appointment Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Attachentitytoappointment
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Attach Entity To Appointment
      x-accepts: application/json
  /appointments/appointments/{appointment_uuid}/entities:
    get:
      operationId: searchAppointmentEntities
      parameters:
      - explode: false
        in: path
        name: appointment_uuid
        required: true
        schema:
          title: Appointment Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: search_on
        required: false
        schema:
          title: Search On
          type: string
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Appointment Entities
      x-accepts: application/json
  /appointments/appointments/entities/{entity_uuid}/appointments:
    get:
      operationId: searchEntityAppointments
      parameters:
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: start_date
        required: false
        schema:
          title: Start Date
          type: string
        style: form
      - explode: true
        in: query
        name: end_date
        required: false
        schema:
          title: End Date
          type: string
        style: form
      - explode: true
        in: query
        name: exclude_cancelled
        required: false
        schema:
          default: false
          title: Exclude Cancelled
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Entities Appointments
      x-accepts: application/json
  /appointments/appointments:
    get:
      operationId: searchAppointment
      parameters:
      - explode: true
        in: query
        name: place_uuid
        required: false
        schema:
          title: Place Uuid
          type: string
        style: form
      - explode: true
        in: query
        name: exclude_cancelled
        required: false
        schema:
          default: false
          title: Exclude Cancelled
          type: boolean
        style: form
      - explode: true
        in: query
        name: is_deleted
        required: false
        schema:
          default: false
          title: Is Deleted
          type: boolean
        style: form
      - explode: true
        in: query
        name: start_range
        required: false
        schema:
          title: Start Range
          type: string
        style: form
      - explode: true
        in: query
        name: end_range
        required: false
        schema:
          title: End Range
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Appointment
      x-accepts: application/json
    post:
      operationId: createAppointment
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Appointment
      x-content-type: application/json
      x-accepts: application/json
  /appointments/appointments/{appointment_uuid}:
    delete:
      operationId: deleteAppointment
      parameters:
      - explode: false
        in: path
        name: appointment_uuid
        required: true
        schema:
          title: Appointment Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Deleteappointment
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Appointment
      x-accepts: application/json
    get:
      operationId: getAppointment
      parameters:
      - explode: false
        in: path
        name: appointment_uuid
        required: true
        schema:
          title: Appointment Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Appointment does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Appointment
      x-accepts: application/json
    put:
      operationId: updateAppointment
      parameters:
      - explode: false
        in: path
        name: appointment_uuid
        required: true
        schema:
          title: Appointment Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Appointment does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Appointment
      x-content-type: application/json
      x-accepts: application/json
  /meta/meta/service/{service}/type/{type_str}/entity/{entity_uuid}:
    delete:
      operationId: deleteMeta
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: type_str
        required: true
        schema:
          title: Type Str
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Meta
      tags:
      - meta
      x-accepts: application/json
    get:
      operationId: getMeta
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: type_str
        required: true
        schema:
          title: Type Str
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          title: Detailed
          type: boolean
        style: form
      - explode: true
        in: query
        name: custom
        required: false
        schema:
          default: false
          title: Custom
          type: boolean
        style: form
      - explode: true
        in: query
        name: dates
        required: false
        schema:
          default: false
          title: Dates
          type: boolean
        style: form
      - explode: true
        in: query
        name: history
        required: false
        schema:
          default: 0
          title: History
          type: integer
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Meta
      tags:
      - meta
      x-accepts: application/json
    post:
      operationId: createMeta
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: type_str
        required: true
        schema:
          title: Type Str
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Meta
      tags:
      - meta
      x-content-type: application/json
      x-accepts: application/json
    put:
      operationId: updateMeta
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: type_str
        required: true
        schema:
          title: Type Str
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Meta
      tags:
      - meta
      x-content-type: application/json
      x-accepts: application/json
  /meta/meta/{meta_uuid}:
    delete:
      operationId: deleteMetaFromUuid
      parameters:
      - explode: false
        in: path
        name: meta_uuid
        required: true
        schema:
          title: Meta Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Meta From Uuid
      tags:
      - meta
      x-accepts: application/json
    get:
      operationId: getMetaFromUuid
      parameters:
      - explode: false
        in: path
        name: meta_uuid
        required: true
        schema:
          title: Meta Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: detailed
        required: false
        schema:
          default: false
          title: Detailed
          type: boolean
        style: form
      - explode: true
        in: query
        name: custom
        required: false
        schema:
          default: false
          title: Custom
          type: boolean
        style: form
      - explode: true
        in: query
        name: dates
        required: false
        schema:
          default: false
          title: Dates
          type: boolean
        style: form
      - explode: true
        in: query
        name: history
        required: false
        schema:
          default: 0
          title: History
          type: integer
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Meta From Uuid
      tags:
      - meta
      x-accepts: application/json
    put:
      operationId: updateMetaFromUuid
      parameters:
      - explode: false
        in: path
        name: meta_uuid
        required: true
        schema:
          title: Meta Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Meta From Uuid
      tags:
      - meta
      x-content-type: application/json
      x-accepts: application/json
  /meta/meta/service/{service}/type/{type_str}/entity/{entity_uuid}/touch:
    post:
      operationId: touchMeta
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: type_str
        required: true
        schema:
          title: Type Str
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Touch Meta
      tags:
      - meta
      x-accepts: application/json
  /meta/meta/slug:
    post:
      operationId: makeSlug
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaSlugger'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Make Slug
      tags:
      - meta
      x-content-type: application/json
      x-accepts: application/json
  /meta/field:
    post:
      operationId: createField
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Field
      tags:
      - meta
      x-content-type: application/json
      x-accepts: application/json
  /meta/field/{field_uuid}:
    delete:
      operationId: deleteField
      parameters:
      - explode: false
        in: path
        name: field_uuid
        required: true
        schema:
          title: Field Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: soft_delete
        required: false
        schema:
          default: true
          title: Soft Delete
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Field
      tags:
      - meta
      x-accepts: application/json
    get:
      operationId: getField
      parameters:
      - explode: false
        in: path
        name: field_uuid
        required: true
        schema:
          title: Field Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Field
      tags:
      - meta
      x-accepts: application/json
    put:
      operationId: updateField
      parameters:
      - explode: false
        in: path
        name: field_uuid
        required: true
        schema:
          title: Field Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Field
      tags:
      - meta
      x-content-type: application/json
      x-accepts: application/json
  /notes/notes/{note_id}:
    delete:
      operationId: deleteNote
      parameters:
      - explode: false
        in: path
        name: note_id
        required: true
        schema:
          title: The ID of the note to get
          type: string
        style: simple
      - explode: true
        in: query
        name: method
        required: false
        schema:
          default: previous
          title: Method
          type: string
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesHTTPValidationError'
          description: Validation Error
      summary: Delete Note
      tags:
      - notes
      x-accepts: application/json
    get:
      operationId: getNote
      parameters:
      - explode: false
        in: path
        name: note_id
        required: true
        schema:
          title: The ID of the note to get
          type: string
        style: simple
      - explode: true
        in: query
        name: history
        required: false
        schema:
          default: 0
          title: History
          type: integer
        style: form
      - explode: true
        in: query
        name: history_content
        required: false
        schema:
          default: true
          title: History Content
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteDynamoHistory'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesHTTPValidationError'
          description: Validation Error
      summary: Get Note
      tags:
      - notes
      x-accepts: application/json
    put:
      operationId: updateNote
      parameters:
      - explode: false
        in: path
        name: note_id
        required: true
        schema:
          title: The ID of the note to get
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesHTTPValidationError'
          description: Validation Error
      summary: Update Note
      tags:
      - notes
      x-content-type: application/json
      x-accepts: application/json
  /notes/notes:
    post:
      operationId: createNote
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteDynamo'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotesHTTPValidationError'
          description: Validation Error
      summary: Create Note
      tags:
      - notes
      x-content-type: application/json
      x-accepts: application/json
  /places/places:
    get:
      description: "Search all places and returns paginated results with Places being\
        \ stored in items field.\nCan search by `project_uuid, name, address, address_line_2,\
        \ city, province_state, country, postal_zip_code, lat, lng\nemail` string\
        \ fields or the `is_public and is_deleted` boolean fields. To search with\
        \ these fields use query params\nwith string values. For sorting fill out\
        \ \"sort_desc\" field with either true/false and the \"sort_on\" query parameter\n\
        with column you want to sort on (ex: name). Max pagination items per page\
        \ is 50.\nItem return format:\n```\n{\n    uuid                          \
        \      **type:** string\n    project_uuid                        **type:**\
        \ string or None\n\n    meta_uuid                           **type:** string\
        \ or None\n\n    catalog_data                        **type:** dict or None\n\
        \n    review_group_data                   **type:** dict or None\n\n    schedule_data\
        \                       **type:** dict or None\n\n    collection_data    \
        \                 **type:** dict or None\n\n    blog_data                \
        \           **type:** dict or None\n\n    tags                           \
        \     **type:** [TagBase] or None\n\n    categories                      \
        \    **type:** [CategoryBase] or None\n\n    company                     \
        \        **type:** CompanyBase or None\n\n    created_at                 \
        \         **type:** string or None\n\n    updated_at                     \
        \     **type:** string or None\n\n    deleted_at                         \
        \ **type:** string or None\n\n}\n```"
      operationId: search_places_places_places_get
      parameters:
      - explode: true
        in: query
        name: project_uuid
        required: false
        schema:
          title: Project Uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
        style: form
      - explode: true
        in: query
        name: address_line_1
        required: false
        schema:
          title: Address Line 1
          type: string
        style: form
      - explode: true
        in: query
        name: address_line_2
        required: false
        schema:
          title: Address Line 2
          type: string
        style: form
      - explode: true
        in: query
        name: city
        required: false
        schema:
          title: City
          type: string
        style: form
      - explode: true
        in: query
        name: province_state
        required: false
        schema:
          title: Province State
          type: string
        style: form
      - explode: true
        in: query
        name: country
        required: false
        schema:
          title: Country
          type: string
        style: form
      - explode: true
        in: query
        name: postal_zip_code
        required: false
        schema:
          title: Postal Zip Code
          type: string
        style: form
      - explode: true
        in: query
        name: lat
        required: false
        schema:
          title: Lat
          type: string
        style: form
      - explode: true
        in: query
        name: lng
        required: false
        schema:
          title: Lng
          type: string
        style: form
      - explode: true
        in: query
        name: email
        required: false
        schema:
          title: Email
          type: string
        style: form
      - explode: true
        in: query
        name: is_public
        required: false
        schema:
          default: true
          title: Is Public
          type: boolean
        style: form
      - explode: true
        in: query
        name: is_deleted
        required: false
        schema:
          default: false
          title: Is Deleted
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_company
        required: false
        schema:
          default: false
          title: With Company
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_catalog
        required: false
        schema:
          default: false
          title: With Catalog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_reviews
        required: false
        schema:
          default: false
          title: With Reviews
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_schedule
        required: false
        schema:
          default: false
          title: With Schedule
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_collection
        required: false
        schema:
          default: false
          title: With Collection
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_blog
        required: false
        schema:
          default: false
          title: With Blog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_tags
        required: false
        schema:
          default: false
          title: With Tags
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_categories
        required: false
        schema:
          default: false
          title: With Categories
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Places
      tags:
      - places
      x-accepts: application/json
    post:
      description: Creates a Place.
      operationId: create_place_places_places_post
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Place
      tags:
      - places
      x-content-type: application/json
      x-accepts: application/json
  /places/places/{place_uuid}:
    delete:
      description: Deletes the place with the given ID and returns True if successful
      operationId: delete_place_places_places__place_uuid__delete
      parameters:
      - explode: false
        in: path
        name: place_uuid
        required: true
        schema:
          title: Place Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: soft_delete
        required: false
        schema:
          default: true
          title: Soft Delete
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Place
      tags:
      - places
      x-accepts: application/json
    get:
      description: Gets the place information given the Place ID
      operationId: get_place_places_places__place_uuid__get
      parameters:
      - explode: false
        in: path
        name: place_uuid
        required: true
        schema:
          title: Place Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_catalog
        required: false
        schema:
          default: false
          title: With Catalog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_reviews
        required: false
        schema:
          default: false
          title: With Reviews
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_schedule
        required: false
        schema:
          default: false
          title: With Schedule
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_collection
        required: false
        schema:
          default: false
          title: With Collection
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_blog
        required: false
        schema:
          default: false
          title: With Blog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_tags
        required: false
        schema:
          default: false
          title: With Tags
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_categories
        required: false
        schema:
          default: false
          title: With Categories
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_company
        required: false
        schema:
          default: false
          title: With Company
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Place
      tags:
      - places
      x-accepts: application/json
    put:
      description: "Update Place with given info, only updating the fields supplied.\
        \ Place Uuid must be sent however."
      operationId: update_place_places_places__place_uuid__put
      parameters:
      - explode: false
        in: path
        name: place_uuid
        required: true
        schema:
          title: Place Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Place
      tags:
      - places
      x-content-type: application/json
      x-accepts: application/json
  /places/companies:
    get:
      description: "Search all companies and returns paginated results with Companies\
        \ being stored in items field.\nCan search by `project_uuid, name, email`\
        \ string fields or the `is_public and is_deleted` boolean fields.\nTo search\
        \ with these fields use query params with string values. For sorting fill\
        \ out \"sort_desc\" field with either\ntrue/false and the \"sort_on\" query\
        \ parameter\nwith column you want to sort on (ex: name). Max pagination items\
        \ per page is 50.\nItem return format:\n```\n{\n    uuid                 \
        \               **type:** string\n    project_uuid                       \
        \ **type:** string or None\n\n    meta_uuid                           **type:**\
        \ string or None\n\n    catalog_data                        **type:** dict\
        \ or None\n\n    review_group_data                   **type:** dict or None\n\
        \n    schedule_data                       **type:** dict or None\n\n    blog_data\
        \                           **type:** dict or None\n\n    tags           \
        \                     **type:** [TagBase] or None\n\n    categories      \
        \                    **type:** [CategoryBase] or None\n\n    places      \
        \                        **type:** PlaceBase or None\n\n    created_at   \
        \                       **type:** string or None\n\n    updated_at       \
        \                   **type:** string or None\n\n    deleted_at           \
        \               **type:** string or None\n\n}\n```"
      operationId: search_companies_places_companies_get
      parameters:
      - explode: true
        in: query
        name: project_uuid
        required: false
        schema:
          title: Project Uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
        style: form
      - explode: true
        in: query
        name: email
        required: false
        schema:
          title: Email
          type: string
        style: form
      - explode: true
        in: query
        name: is_public
        required: false
        schema:
          default: true
          title: Is Public
          type: boolean
        style: form
      - explode: true
        in: query
        name: is_deleted
        required: false
        schema:
          default: false
          title: Is Deleted
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_places
        required: false
        schema:
          default: false
          title: With Places
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_catalog
        required: false
        schema:
          default: false
          title: With Catalog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_reviews
        required: false
        schema:
          default: false
          title: With Reviews
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_schedule
        required: false
        schema:
          default: false
          title: With Schedule
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_blog
        required: false
        schema:
          default: false
          title: With Blog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_tags
        required: false
        schema:
          default: false
          title: With Tags
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_categories
        required: false
        schema:
          default: false
          title: With Categories
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Companies
      tags:
      - companies
      x-accepts: application/json
    post:
      description: Creates a company
      operationId: create_company_places_companies_post
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Company
      tags:
      - companies
      x-content-type: application/json
      x-accepts: application/json
  /places/companies/{company_uuid}:
    delete:
      description: Deletes the company with the given ID and returns True if successful
      operationId: delete_place_places_companies__company_uuid__delete
      parameters:
      - explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          title: Company Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: soft_delete
        required: false
        schema:
          default: true
          title: Soft Delete
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Place
      tags:
      - companies
      x-accepts: application/json
    get:
      description: Gets the company information given the Place ID
      operationId: get_company_places_companies__company_uuid__get
      parameters:
      - explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          title: Company Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_catalog
        required: false
        schema:
          default: false
          title: With Catalog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_reviews
        required: false
        schema:
          default: false
          title: With Reviews
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_schedule
        required: false
        schema:
          default: false
          title: With Schedule
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_blog
        required: false
        schema:
          default: false
          title: With Blog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_tags
        required: false
        schema:
          default: false
          title: With Tags
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_categories
        required: false
        schema:
          default: false
          title: With Categories
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_places
        required: false
        schema:
          default: false
          title: With Places
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Company
      tags:
      - companies
      x-accepts: application/json
    put:
      description: "Update company with given info, only updating the fields supplied.\
        \ Company Uuid must be sent however."
      operationId: update_company_places_companies__company_uuid__put
      parameters:
      - explode: false
        in: path
        name: company_uuid
        required: true
        schema:
          title: Company Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Company
      tags:
      - companies
      x-content-type: application/json
      x-accepts: application/json
  /places/staff:
    get:
      description: "TODO\nItem return format:\n```\n{\n    uuid                  \
        \              **type:** string\n    project_uuid                        **type:**\
        \ string or None\n\n    entity                              **type:** string\
        \ or None\n\n    place                               **type:** dict or None\n\
        \n    company                             **type:** dict or None\n\n    schedule\
        \                            **type:** dict or None\n\n    catalog       \
        \                      **type:** dict or None\n\n    reviews             \
        \                **type:** dict or None\n\n    created_at                \
        \          **type:** string or None\n\n    updated_at                    \
        \      **type:** string or None\n\n    deleted_at                        \
        \  **type:** string or None\n\n}\n```"
      operationId: search_staff_places_staff_get
      parameters:
      - explode: true
        in: query
        name: project_uuid
        required: false
        schema:
          title: Project Uuid
          type: string
        style: form
      - explode: true
        in: query
        name: first_name
        required: false
        schema:
          title: First Name
          type: string
        style: form
      - explode: true
        in: query
        name: last_name
        required: false
        schema:
          title: Last Name
          type: string
        style: form
      - explode: true
        in: query
        name: is_deleted
        required: false
        schema:
          default: false
          title: Is Deleted
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_companies
        required: false
        schema:
          default: false
          title: With Companies
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_places
        required: false
        schema:
          default: false
          title: With Places
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_schedule
        required: false
        schema:
          default: false
          title: With Schedule
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_catalog
        required: false
        schema:
          default: false
          title: With Catalog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_reviews
        required: false
        schema:
          default: false
          title: With Reviews
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_roles
        required: false
        schema:
          default: false
          title: With Roles
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Staff
      tags:
      - staff
      x-accepts: application/json
    post:
      description: Creates a staff member
      operationId: create_staff_places_staff_post
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffDb'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Staff
      tags:
      - staff
      x-content-type: application/json
      x-accepts: application/json
  /places/staff/{staff_uuid}:
    delete:
      description: Deletes the staff member with the given ID and returns True if
        successful
      operationId: delete_staff_places_staff__staff_uuid__delete
      parameters:
      - explode: false
        in: path
        name: staff_uuid
        required: true
        schema:
          title: Staff Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: soft_delete
        required: false
        schema:
          default: true
          title: Soft Delete
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Staff
      tags:
      - staff
      x-accepts: application/json
    get:
      description: Gets the staff member information given the staff ID
      operationId: get_staff_places_staff__staff_uuid__get
      parameters:
      - explode: false
        in: path
        name: staff_uuid
        required: true
        schema:
          title: Staff Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_places
        required: false
        schema:
          default: false
          title: With Places
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_companies
        required: false
        schema:
          default: false
          title: With Companies
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_catalog
        required: false
        schema:
          default: false
          title: With Catalog
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_schedule
        required: false
        schema:
          default: false
          title: With Schedule
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_roles
        required: false
        schema:
          default: false
          title: With Roles
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Staff
      tags:
      - staff
      x-accepts: application/json
    put:
      description: "Update staff with given info, only updating the fields supplied.\
        \ Staff Uuid must be sent however."
      operationId: update_staff_places_staff__staff_uuid__put
      parameters:
      - explode: false
        in: path
        name: staff_uuid
        required: true
        schema:
          title: Staff Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StaffCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaffResponse'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Staff
      tags:
      - staff
      x-content-type: application/json
      x-accepts: application/json
  /places/categories:
    get:
      description: "TODO\nItem return format:\n```\n{\n    uuid                  \
        \              **type:** string\n    project_uuid                        **type:**\
        \ string or None\n\n    name                                **type:** string\
        \ or None\n\n    meta                                **type:** dict or None\n\
        \n    created_at                          **type:** string or None\n\n   \
        \ updated_at                          **type:** string or None\n\n    deleted_at\
        \                          **type:** string or None\n\n}\n```"
      operationId: search_categories_places_categories_get
      parameters:
      - explode: true
        in: query
        name: project_uuid
        required: false
        schema:
          title: Project Uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
        style: form
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Categories
      tags:
      - category
      x-accepts: application/json
    post:
      description: Creates a category
      operationId: create_category_places_categories_post
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDb'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Category
      tags:
      - category
      x-content-type: application/json
      x-accepts: application/json
  /places/categories/{category_uuid}:
    delete:
      description: Deletes the category with the given ID and returns True if successful
      operationId: delete_category_places_categories__category_uuid__delete
      parameters:
      - explode: false
        in: path
        name: category_uuid
        required: true
        schema:
          title: Category Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Category
      tags:
      - category
      x-accepts: application/json
    get:
      description: Gets the category information given the category ID
      operationId: get_category_places_categories__category_uuid__get
      parameters:
      - explode: false
        in: path
        name: category_uuid
        required: true
        schema:
          title: Category Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryBase'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Category
      tags:
      - category
      x-accepts: application/json
    put:
      description: "Update category with given info, only updating the fields supplied.\
        \ Category Uuid must be sent however."
      operationId: update_category_places_categories__category_uuid__put
      parameters:
      - explode: false
        in: path
        name: category_uuid
        required: true
        schema:
          title: Category Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryBase'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Category
      tags:
      - category
      x-content-type: application/json
      x-accepts: application/json
  /places/tags:
    get:
      description: "TODO\nItem return format:\n```\n{\n    uuid                  \
        \              **type:** string\n    project_uuid                        **type:**\
        \ string or None\n\n    name                                **type:** string\
        \ or None\n\n    meta                                **type:** dict or None\n\
        \n    created_at                          **type:** string or None\n\n   \
        \ updated_at                          **type:** string or None\n\n    deleted_at\
        \                          **type:** string or None\n\n}\n```"
      operationId: search_tags_places_tags_get
      parameters:
      - explode: true
        in: query
        name: project_uuid
        required: false
        schema:
          title: Project Uuid
          type: string
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Tags
      tags:
      - tag
      x-accepts: application/json
    post:
      description: Creates a tag
      operationId: create_tag_places_tags_post
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDb'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Tag
      tags:
      - tag
      x-content-type: application/json
      x-accepts: application/json
  /places/tags/{tag_uuid}:
    delete:
      description: Deletes the tag member with the given ID and returns True if successful
      operationId: delete_tag_places_tags__tag_uuid__delete
      parameters:
      - explode: false
        in: path
        name: tag_uuid
        required: true
        schema:
          title: Tag Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Tag
      tags:
      - tag
      x-accepts: application/json
    get:
      description: Gets the tag member information given the tag ID
      operationId: get_tag_places_tags__tag_uuid__get
      parameters:
      - explode: false
        in: path
        name: tag_uuid
        required: true
        schema:
          title: Tag Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagBase'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Tag
      tags:
      - tag
      x-accepts: application/json
    put:
      description: "Update tag with given info, only updating the fields supplied.\
        \ Tag Uuid must be sent however."
      operationId: update_tag_places_tags__tag_uuid__put
      parameters:
      - explode: false
        in: path
        name: tag_uuid
        required: true
        schema:
          title: Tag Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagBase'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Tag
      tags:
      - tag
      x-content-type: application/json
      x-accepts: application/json
  /places/geocoding/forward:
    get:
      operationId: forward_geocoding_places_geocoding_forward_get
      parameters:
      - explode: true
        in: query
        name: searching_place
        required: true
        schema:
          title: Searching Place
          type: string
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Forward Geocoding
      tags:
      - places
      x-accepts: application/json
  /places/geocoding/reverse:
    get:
      operationId: reverse_geocoding_places_geocoding_reverse_get
      parameters:
      - explode: true
        in: query
        name: long
        required: true
        schema:
          title: Long
          type: number
        style: form
      - explode: true
        in: query
        name: lat
        required: true
        schema:
          title: Lat
          type: number
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Reverse Geocoding
      tags:
      - places
      x-accepts: application/json
  /places/search/places/string:
    get:
      description: Search places by a search string
      operationId: search_places_by_search_string_places_search_places_string_get
      parameters:
      - explode: true
        in: query
        name: search_string
        required: false
        schema:
          default: ""
          title: Search String
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Route not found - Denied by eHelply
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Places By Search String
      tags:
      - places
      x-accepts: application/json
  /products/products:
    get:
      operationId: searchProduct
      parameters:
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
        style: form
      - explode: true
        in: query
        name: addons
        required: false
        schema:
          items:
            type: string
          title: Addons
          type: array
        style: form
      - explode: true
        in: query
        name: price_max
        required: false
        schema:
          title: Price Max
          type: integer
        style: form
      - explode: true
        in: query
        name: price_min
        required: false
        schema:
          title: Price Min
          type: integer
        style: form
      - explode: true
        in: query
        name: quantity_available
        required: false
        schema:
          default: false
          title: Quantity Available
          type: boolean
        style: form
      - explode: true
        in: query
        name: is_deleted
        required: false
        schema:
          default: false
          title: Is Deleted
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Products
      x-accepts: application/json
    post:
      operationId: createProduct
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Product
      x-content-type: application/json
      x-accepts: application/json
  /products/products/{product_uuid}:
    delete:
      operationId: deleteProduct
      parameters:
      - explode: false
        in: path
        name: product_uuid
        required: true
        schema:
          title: Product Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Deleteproduct
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Product
      x-accepts: application/json
    get:
      operationId: getProduct
      parameters:
      - explode: false
        in: path
        name: product_uuid
        required: true
        schema:
          title: Product Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_addons
        required: false
        schema:
          default: false
          title: With Addons
          type: boolean
        style: form
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Product
      x-accepts: application/json
    put:
      operationId: updateProduct
      parameters:
      - explode: false
        in: path
        name: product_uuid
        required: true
        schema:
          title: Product Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Product
      x-content-type: application/json
      x-accepts: application/json
  /products/products/{product_uuid}/catalogs:
    get:
      operationId: searchProductCatalog
      parameters:
      - explode: false
        in: path
        name: product_uuid
        required: true
        schema:
          title: Product Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Product Catalogs
      x-accepts: application/json
  /products/catalogs:
    get:
      operationId: searchCatalogs
      parameters:
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          title: Name
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Catalogs
      x-accepts: application/json
    post:
      operationId: createCatalog
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Catalog
      x-content-type: application/json
      x-accepts: application/json
  /products/catalogs/{catalog_uuid}:
    delete:
      operationId: deleteCatalog
      parameters:
      - explode: false
        in: path
        name: catalog_uuid
        required: true
        schema:
          title: Catalog Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Deletecatalog
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Catalog
      x-accepts: application/json
    get:
      operationId: getCatalog
      parameters:
      - explode: false
        in: path
        name: catalog_uuid
        required: true
        schema:
          title: Catalog Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Catalog
      x-accepts: application/json
    put:
      operationId: updateCatalog
      parameters:
      - explode: false
        in: path
        name: catalog_uuid
        required: true
        schema:
          title: Catalog Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogBase'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatalogReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Catalog
      x-content-type: application/json
      x-accepts: application/json
  /products/catalogs/{catalog_uuid}/products:
    get:
      operationId: searchCatalogProducts
      parameters:
      - explode: false
        in: path
        name: catalog_uuid
        required: true
        schema:
          title: Catalog Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: with_meta
        required: false
        schema:
          default: false
          title: With Meta
          type: boolean
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Catalog Products
      x-accepts: application/json
  /products/catalogs/{catalog_uuid}/products/{product_uuid}:
    delete:
      operationId: detachProductFromCatalog
      parameters:
      - explode: false
        in: path
        name: catalog_uuid
        required: true
        schema:
          title: Catalog Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: product_uuid
        required: true
        schema:
          title: Product Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Detachproductfromcatalog
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Detach Product From Catalog
      x-accepts: application/json
    post:
      operationId: attachProductToCatalog
      parameters:
      - explode: false
        in: path
        name: catalog_uuid
        required: true
        schema:
          title: Catalog Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: product_uuid
        required: true
        schema:
          title: Product Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Attachproducttocatalog
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Attach Product To Catalog
      x-accepts: application/json
  /products/reviews/types/{entity_type}/entities/{entity_uuid}:
    get:
      operationId: search_reviews
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          title: Entity Type
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Search Review
      x-accepts: application/json
    post:
      operationId: create_review
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          title: Entity Type
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReview'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Create Review
      x-content-type: application/json
      x-accepts: application/json
  /products/reviews/types/{entity_type}/entities/{entity_uuid}/reviews/{review_uuid}:
    delete:
      operationId: delete_review
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          title: Entity Type
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: review_uuid
        required: true
        schema:
          title: Review Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Delete Review
      x-accepts: application/json
    get:
      operationId: get_review
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          title: Entity Type
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: review_uuid
        required: true
        schema:
          title: Review Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Get Review
      x-accepts: application/json
    put:
      operationId: update_review
      parameters:
      - explode: false
        in: path
        name: entity_type
        required: true
        schema:
          title: Entity Type
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: review_uuid
        required: true
        schema:
          title: Review Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReview'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Update Review
      x-content-type: application/json
      x-accepts: application/json
  /sam/logging/logs:
    get:
      operationId: getLogs
      parameters:
      - explode: true
        in: query
        name: service
        required: false
        schema:
          title: Service
          type: string
        style: form
      - explode: true
        in: query
        name: date_start
        required: false
        schema:
          title: Date Start
          type: string
        style: form
      - explode: true
        in: query
        name: date_end
        required: false
        schema:
          title: Date End
          type: string
        style: form
      - explode: true
        in: query
        name: desc
        required: false
        schema:
          default: true
          title: Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoggingDynamo'
                title: Response Getlogs
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getlogs
      tags:
      - logging
      x-accepts: application/json
  /sam/logging/logs/services/{service}:
    get:
      operationId: getServiceLogs
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: true
        in: query
        name: date_start
        required: false
        schema:
          title: Date Start
          type: string
        style: form
      - explode: true
        in: query
        name: date_end
        required: false
        schema:
          title: Date End
          type: string
        style: form
      - explode: true
        in: query
        name: desc
        required: false
        schema:
          default: true
          title: Desc
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LoggingDynamo'
                title: Response Getservicelogs
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservicelogs
      tags:
      - logging
      x-accepts: application/json
  /sam/logging/logs/services/{service}/subjects/{subject}:
    get:
      operationId: getSubjectLogs
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: subject
        required: true
        schema:
          title: Subject
          type: string
        style: simple
      - explode: true
        in: query
        name: date_start
        required: false
        schema:
          title: Date Start
          type: string
        style: form
      - explode: true
        in: query
        name: date_end
        required: false
        schema:
          title: Date End
          type: string
        style: form
      - explode: true
        in: query
        name: desc
        required: false
        schema:
          default: true
          title: Desc
          type: boolean
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          title: Limit
          type: integer
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Getsubjectlogs
                type: object
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getsubjectlogs
      tags:
      - logging
      x-accepts: application/json
  /sam/monitor/services/{service}:
    get:
      operationId: getService
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: true
        in: query
        name: heartbeats
        required: false
        schema:
          default: false
          title: Heartbeats
          type: boolean
        style: form
      - explode: true
        in: query
        name: heartbeat_limit
        required: false
        schema:
          default: 5
          title: Heartbeat Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: alarms
        required: false
        schema:
          default: false
          title: Alarms
          type: boolean
        style: form
      - explode: true
        in: query
        name: alarm_limit
        required: false
        schema:
          default: 5
          title: Alarm Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: stage
        required: false
        schema:
          title: Stage
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservice
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services:
    get:
      operationId: getServices
      parameters:
      - explode: true
        in: query
        name: heartbeats
        required: false
        schema:
          default: false
          title: Heartbeats
          type: boolean
        style: form
      - explode: true
        in: query
        name: heartbeat_limit
        required: false
        schema:
          default: 5
          title: Heartbeat Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: alarms
        required: false
        schema:
          default: false
          title: Alarms
          type: boolean
        style: form
      - explode: true
        in: query
        name: alarm_limit
        required: false
        schema:
          default: 5
          title: Alarm Limit
          type: integer
        style: form
      - explode: true
        in: query
        name: include_hidden
        required: false
        schema:
          default: false
          title: Include Hidden
          type: boolean
        style: form
      - explode: true
        in: query
        name: stage
        required: false
        schema:
          title: Stage
          type: string
        style: form
      - explode: true
        in: query
        name: key
        required: false
        schema:
          title: Key
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ServiceResponse'
                title: Response Getservices
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservices
      tags:
      - monitor
      x-accepts: application/json
    post:
      operationId: registerService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Registerservice
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/hide:
    post:
      operationId: hideService
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceMessageResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Hideservice
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/show:
    post:
      operationId: showService
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceMessageResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Showservice
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/heartbeats:
    get:
      operationId: getServiceHeartbeat
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: true
        in: query
        name: history
        required: false
        schema:
          default: 5
          title: History
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HeartbeatResponse'
                title: Response Getserviceheartbeat
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getserviceheartbeat
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/kpis:
    get:
      operationId: getServiceKpis
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: true
        in: query
        name: history
        required: false
        schema:
          default: 5
          title: History
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/KpiResponse'
                title: Response Getservicekpis
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservicekpis
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/vitals:
    get:
      operationId: getServiceVitals
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: true
        in: query
        name: history
        required: false
        schema:
          default: 5
          title: History
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StatsVitalsResponse'
                title: Response Getservicevitals
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservicevitals
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms:
    get:
      operationId: getServiceAlarms
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: true
        in: query
        name: history
        required: false
        schema:
          default: 5
          title: History
          type: integer
        style: form
      - explode: true
        in: query
        name: include_terminated
        required: false
        schema:
          default: false
          title: Include Terminated
          type: boolean
        style: form
      - explode: true
        in: query
        name: include_cleared
        required: false
        schema:
          default: false
          title: Include Cleared
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AlarmResponse'
                title: Response Getservicealarms
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservicealarms
      tags:
      - monitor
      x-accepts: application/json
    post:
      operationId: triggerAlarm
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlarmCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Triggeralarm
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}:
    get:
      operationId: getServiceAlarm
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservicealarm
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}/clear:
    post:
      operationId: clearAlarm
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Clearalarm
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}/assign:
    post:
      operationId: assignAlarm
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlarmAssign'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Assignalarm
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}/acknowledge:
    post:
      operationId: acknowledgeAlarm
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlarmAcknowledge'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Acknowledgealarm
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}/ignore:
    post:
      operationId: ignoreAlarm
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlarmIgnore'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Ignorealarm
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}/terminate:
    post:
      operationId: terminateAlarm
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlarmTerminate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Terminatealarm
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}/ticket:
    post:
      operationId: attachAlarmTicket
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlarmTicket'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Attachalarmticket
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/stages/{stage}/alarms/{alarm_uuid}/note:
    post:
      operationId: attachAlarmNote
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: stage
        required: true
        schema:
          title: Stage
          type: string
        style: simple
      - explode: false
        in: path
        name: alarm_uuid
        required: true
        schema:
          title: Alarm Uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlarmNote'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlarmResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Attachalarmnote
      tags:
      - monitor
      x-content-type: application/json
      x-accepts: application/json
  /sam/monitor/services/{service}/alarms:
    get:
      operationId: searchAlarms
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: search_on
        required: false
        schema:
          title: Search On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Searchalarms
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/specs/services:
    get:
      operationId: GetServicesWithSpecs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceServiceWithSpecsResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
      summary: Getserviceswithspecs
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/specs:
    get:
      operationId: GetServiceSpecs
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSpecsResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservicespecs
      tags:
      - monitor
      x-accepts: application/json
  /sam/monitor/services/{service}/specs/{spec}:
    get:
      operationId: GetServiceSpec
      parameters:
      - explode: false
        in: path
        name: service
        required: true
        schema:
          title: Service
          type: string
        style: simple
      - explode: false
        in: path
        name: spec
        required: true
        schema:
          title: Spec
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceSpecResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getservicespec
      tags:
      - monitor
      x-accepts: application/json
  /sam/projects/projects:
    get:
      description: Search projects
      operationId: searchProjects
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: search_on
        required: false
        schema:
          title: Search On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Searchprojects
      tags:
      - projects
      x-accepts: application/json
    post:
      description: Create a new Project
      operationId: createProject
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsProjectCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDB'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createproject
      tags:
      - projects
      x-content-type: application/json
      x-accepts: application/json
  /sam/projects/projects/{project_uuid}:
    delete:
      operationId: archiveProject
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Archiveproject'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Archiveproject
      tags:
      - projects
      x-accepts: application/json
    get:
      description: Get a Project
      operationId: getProject
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDB'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getproject
      tags:
      - projects
      x-accepts: application/json
    put:
      operationId: updateProject
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsProjectUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Updateproject
                type: object
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Updateproject
      tags:
      - projects
      x-content-type: application/json
      x-accepts: application/json
  /sam/projects/usage/types:
    get:
      description: |-
        Get a UsageType

        No auth because we may want to use this on pricing/docs pages
      operationId: searchUsageType
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: search_on
        required: false
        schema:
          title: Search On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Searchusagetype
      tags:
      - projects
      x-accepts: application/json
    post:
      operationId: createUsageType
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsUsageTypeCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsUsageTypeDB'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createusagetype
      tags:
      - projects
      x-content-type: application/json
      x-accepts: application/json
  /sam/projects/usage/types/{usage_type_key}:
    delete:
      operationId: deleteUsageType
      parameters:
      - explode: false
        in: path
        name: usage_type_key
        required: true
        schema:
          title: Usage Type Key
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Deleteusagetype'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Deleteusagetype
      tags:
      - projects
      x-accepts: application/json
    get:
      description: |-
        Get a UsageType

        No auth because we may want to use this on pricing/docs pages
      operationId: getUsageType
      parameters:
      - explode: false
        in: path
        name: usage_type_key
        required: true
        schema:
          title: Usage Type Key
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsUsageTypeGet'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: UsageType does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getusagetype
      tags:
      - projects
      x-accepts: application/json
    put:
      operationId: updateUsageType
      parameters:
      - explode: false
        in: path
        name: usage_type_key
        required: true
        schema:
          title: Usage Type Key
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsUsageTypeUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsUsageTypeDB'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: UsageType does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Updateusagetype
      tags:
      - projects
      x-content-type: application/json
      x-accepts: application/json
  /sam/projects/members/{entity_uuid}/projects:
    get:
      operationId: getMemberProjects
      parameters:
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: role
        required: false
        schema:
          title: Role
          type: string
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectsProjectGet'
                title: Response Getmemberprojects
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Member does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getmemberprojects
      tags:
      - projects
      x-accepts: application/json
  /sam/projects/projects/{project_uuid}/members:
    get:
      operationId: getProjectMembers
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: role
        required: false
        schema:
          title: Role
          type: string
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectsProjectMemberDB'
                title: Response Getprojectmembers
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getprojectmembers
      tags:
      - projects
      x-accepts: application/json
  /sam/projects/projects/{project_uuid}/members/{entity_uuid}:
    delete:
      operationId: removeMemberFromProject
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Removememberfromproject'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Removememberfromproject
      tags:
      - projects
      x-accepts: application/json
    post:
      operationId: addMemberToProject
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: entity_uuid
        required: true
        schema:
          title: Entity Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Addmembertoproject'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Addmembertoproject
      tags:
      - projects
      x-accepts: application/json
  /sam/projects/projects/{project_uuid}/usage:
    get:
      operationId: getAllProjectUsage
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: year
        required: false
        schema:
          title: Year
          type: integer
        style: form
      - explode: true
        in: query
        name: month
        required: false
        schema:
          title: Month
          type: integer
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectsProjectUsageDB'
                title: Response Getallprojectusage
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getallprojectusage
      tags:
      - projects
      x-accepts: application/json
  /sam/projects/projects/{project_uuid}/usage/{usage_type_key}:
    get:
      operationId: getSpecificProjectUsage
      parameters:
      - explode: false
        in: path
        name: usage_type_key
        required: true
        schema:
          title: Usage Type Key
          type: string
        style: simple
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsProjectUsageDB'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: "Project, Usage does not exist"
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getspecificprojectusage
      tags:
      - projects
      x-accepts: application/json
  /sam/projects/projects/{project_uuid}/keys:
    delete:
      operationId: deleteProjectKey
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: true
        in: query
        name: access_token
        required: false
        schema:
          title: Access Token
          type: string
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Deleteprojectkey
                type: string
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: "Project, Entity, or Key does not exist"
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Deleteprojectkey
      tags:
      - projects
      x-accepts: application/json
    get:
      operationId: getProjectKeys
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProjectsProjectMemberDB'
                title: Response Getprojectkeys
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project or Entity does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getprojectkeys
      tags:
      - projects
      x-accepts: application/json
    post:
      operationId: createProjectKey
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityKeyCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateKeyResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Project or Entity does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createprojectkey
      tags:
      - projects
      x-content-type: application/json
      x-accepts: application/json
  /sam/security/tokens:
    post:
      operationId: generateToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityCreateToken'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Generatetoken'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Generatetoken
      tags:
      - security
      x-content-type: application/json
      x-accepts: application/json
  /sam/security/keys:
    get:
      operationId: searchKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityKeyGet'
                title: Response Searchkeys
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
      summary: Searchkeys
      tags:
      - security
      x-accepts: application/json
    post:
      operationId: createKey
      parameters:
      - explode: true
        in: query
        name: access_length
        required: false
        schema:
          default: 64
          title: Access Length
          type: integer
        style: form
      - explode: true
        in: query
        name: secret_length
        required: false
        schema:
          default: 64
          title: Secret Length
          type: integer
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityKeyCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Createkey'
          description: Successful Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: 'Access token and secret token lengths must be greater than
            48 characters and less than 1024 characters to guarantee adequate security. '
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createkey
      tags:
      - security
      x-content-type: application/json
      x-accepts: application/json
  /sam/security/keys/{key_uuid}:
    delete:
      operationId: deleteKey
      parameters:
      - explode: false
        in: path
        name: key_uuid
        required: true
        schema:
          title: Key Uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response_Deletekey'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Deletekey
      tags:
      - security
      x-accepts: application/json
    get:
      operationId: getKey
      parameters:
      - explode: false
        in: path
        name: key_uuid
        required: true
        schema:
          title: Key Uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityKeyGet'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Key does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getkey
      tags:
      - security
      x-accepts: application/json
  /sam/security/keys/verify:
    post:
      operationId: verifyKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityKeyVerify'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityKeyGet'
          description: Successful Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: 'Access token and secret token lengths must be greater than
            48 characters and less than 1024 characters to guarantee adequate security. '
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Key
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Verifykey
      tags:
      - security
      x-content-type: application/json
      x-accepts: application/json
  /sam/security/encryption/categories/{category}/keys:
    get:
      operationId: getEncryptionKey
      parameters:
      - explode: false
        in: path
        name: category
        required: true
        schema:
          title: Category
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-security-secret-key
        required: false
        schema:
          title: Ehelply-Security-Secret-Key
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SecurityEncryptionKeyGet'
                title: Response Getencryptionkey
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getencryptionkey
      tags:
      - security
      x-accepts: application/json
    post:
      operationId: createEncryptionKey
      parameters:
      - explode: false
        in: path
        name: category
        required: true
        schema:
          title: Category
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-security-secret-key
        required: false
        schema:
          title: Ehelply-Security-Secret-Key
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityEncryptionKeyResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createencryptionkey
      tags:
      - security
      x-accepts: application/json
  /sam/support/contact:
    post:
      operationId: createContact
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createcontact
      tags:
      - support
      x-content-type: application/json
      x-accepts: application/json
  /sam/support/projects/{project_uuid}/members/{member_uuid}/tickets:
    get:
      operationId: listTickets
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: member_uuid
        required: true
        schema:
          title: Member Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TicketsResponse'
                title: Response Listtickets
                type: array
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Record does not exist
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Listtickets
      tags:
      - support
      x-accepts: application/json
    post:
      operationId: createTicket
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: member_uuid
        required: true
        schema:
          title: Member Uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicket'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createticket
      tags:
      - support
      x-content-type: application/json
      x-accepts: application/json
  /sam/support/projects/{project_uuid}/members/{member_uuid}/tickets/{ticket_id}:
    get:
      operationId: viewTicket
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: member_uuid
        required: true
        schema:
          title: Member Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: ticket_id
        required: true
        schema:
          title: Ticket Id
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Viewticket
      tags:
      - support
      x-accepts: application/json
    put:
      operationId: updateTicket
      parameters:
      - explode: false
        in: path
        name: project_uuid
        required: true
        schema:
          title: Project Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: member_uuid
        required: true
        schema:
          title: Member Uuid
          type: string
        style: simple
      - explode: false
        in: path
        name: ticket_id
        required: true
        schema:
          title: Ticket Id
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTicket'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketResponse'
          description: Successful Response
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getAppointment_403_response'
          description: Unauthorized - Denied by eHelply
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Updateticket
      tags:
      - support
      x-content-type: application/json
      x-accepts: application/json
  /sam/billing/create_billing_account:
    post:
      operationId: createBillingAccount
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeAccountResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createbillingaccount
      tags:
      - billing
      x-accepts: application/json
  /sam/billing/retrieve_secret:
    get:
      operationId: getClientSecret
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StripeCustomerSecretResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getclientsecret
      tags:
      - billing
      x-accepts: application/json
  /sam/billing/process_payment:
    post:
      operationId: processPayment
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Processpayment
                type: string
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Processpayment
      tags:
      - billing
      x-content-type: application/json
      x-accepts: application/json
  /sam/billing/remove_payment_method:
    delete:
      operationId: removePaymentMethod
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Removepaymentmethod
                type: string
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Removepaymentmethod
      tags:
      - billing
      x-accepts: application/json
  /sam/billing/view_payment_method:
    get:
      operationId: listPaymentMethods
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PaymentMethodResponse'
                title: Response Listpaymentmethods
                type: array
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Listpaymentmethods
      tags:
      - billing
      x-accepts: application/json
  /sam/billing/has_payment:
    get:
      operationId: hasPayment
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Haspayment
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Haspayment
      tags:
      - billing
      x-accepts: application/json
  /sam/billing/reconcile_payment:
    get:
      operationId: reconcilePaymentMethod
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Reconcilepaymentmethod
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Reconcilepaymentmethod
      tags:
      - billing
      x-accepts: application/json
  /sam/users/participants:
    get:
      description: "Search participants using a user uuid, returns pagination information\
        \ and list of `items` (ParticipantUserReturn\nfrom GET Participant). Can search\
        \ on \"user_uuid\", and sort on any field. To search enter search value into\n\
        \"search\" query param and the field into \"search on\" (currently only \"\
        user\"uuid\"). For sorting fill out\n\"sort_desc\" field with either true/false\
        \ and the \"sort_on\" query parameter with column you want to sort on (ex:\n\
        date_created). Max pagination items per page is 50."
      operationId: searchParticipants
      parameters:
      - explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          title: Page
          type: integer
        style: form
      - explode: true
        in: query
        name: page_size
        required: false
        schema:
          default: 25
          title: Page Size
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          title: Search
          type: string
        style: form
      - explode: true
        in: query
        name: search_on
        required: false
        schema:
          title: Search On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_on
        required: false
        schema:
          title: Sort On
          type: string
        style: form
      - explode: true
        in: query
        name: sort_desc
        required: false
        schema:
          default: false
          title: Sort Desc
          type: boolean
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Searchparticipants
      tags:
      - users
      x-accepts: application/json
    post:
      description: Creates a participant given the participant info (meta and user_id)
      operationId: createParticipant
      parameters:
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantUserReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createparticipant
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/participants/{participant_id}:
    delete:
      description: "Delete participants related to the given participant_id, returns\
        \ True if successful"
      operationId: deleteParticipant
      parameters:
      - explode: false
        in: path
        name: participant_id
        required: true
        schema:
          title: Participant Id
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Deleteparticipant
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Deleteparticipant
      tags:
      - users
      x-accepts: application/json
    get:
      description: Gets a participant given their participant ID
      operationId: getParticipant
      parameters:
      - explode: false
        in: path
        name: participant_id
        required: true
        schema:
          title: Participant Id
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantUserReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getparticipant
      tags:
      - users
      x-accepts: application/json
    put:
      description: Update participant data given
      operationId: updateParticipant
      parameters:
      - explode: false
        in: path
        name: participant_id
        required: true
        schema:
          title: Participant Id
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParticipantUpdate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantUserReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Updateparticipant
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/auth/signup:
    post:
      description: "Signup to eHelply, creates a user and default participant behind\
        \ the scenes. Does not verify email."
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignup'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSignupReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/auth/login:
    post:
      description: "Login endpoint, returns tokens. EMAIL NEEDS TO BE VERIFIED (can\
        \ be done through the email the user received)."
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/auth/{app_client}/refresh-token:
    post:
      description: Refreshes tokens given a refresh token.
      operationId: refreshToken
      parameters:
      - explode: false
        in: path
        name: app_client
        required: true
        schema:
          title: App Client
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              title: Token
              type: string
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTokenReturn'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Refreshtoken
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/auth/signup/confirm:
    post:
      description: Validates a user signup with a given confirmation
      operationId: confirmSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfirmation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Confirmsignup
                type: object
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Confirmsignup
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/auth/password/reset:
    post:
      description: Sends the user an email with a confirmation code so they can reset
        their password
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordReset'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Resetpassword
                type: object
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Resetpassword
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/auth/password/reset/confirm:
    post:
      description: Resets the given user's password to the given password when the
        proper code is provided
      operationId: resetPasswordConfirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPasswordResetConfirmation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Resetpasswordconfirmation
                type: object
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Resetpasswordconfirmation
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users:
    post:
      description: "Usually ran after login and will do the following:\n- If no user\
        \ exists (AKA signed in with social media) it will create a new user and default\
        \ participant\n- If a user exists, sync Cognito data from Cognito to the user\n\
        - Determine missing fields that SHOULD be filled"
      operationId: createUser
      parameters:
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Createuser
      tags:
      - users
      x-accepts: application/json
  /sam/users/validations/{field}:
    post:
      description: Validates a certain field.
      operationId: userValidations
      parameters:
      - example: email
        explode: false
        in: path
        name: field
        required: true
        schema:
          title: Field
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserValidations'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Uservalidations
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Uservalidations
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
  /sam/users/{user_id}:
    delete:
      description: "Soft deletes the user with the provided user id, granted the deleter\
        \ is the same person or an admin. Returns True\nif successful"
      operationId: deleteUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                title: Response Deleteuser
                type: boolean
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Deleteuser
      tags:
      - users
      x-accepts: application/json
    get:
      description: Gets the user object given user id (uuid) or cognito id (cognito)
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      - example: cognito OR uuid
        explode: true
        in: query
        name: id_type
        required: false
        schema:
          title: Id Type
          type: string
        style: form
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Getuser
      tags:
      - users
      x-accepts: application/json
    put:
      description: Update the given user and sync the cognito data
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: string
        style: simple
      - explode: false
        in: header
        name: x-access-token
        required: false
        schema:
          title: X-Access-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: x-secret-token
        required: false
        schema:
          title: X-Secret-Token
          type: string
        style: simple
      - explode: false
        in: header
        name: authorization
        required: false
        schema:
          title: Authorization
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-active-participant
        required: false
        schema:
          title: Ehelply-Active-Participant
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-project
        required: false
        schema:
          title: Ehelply-Project
          type: string
        style: simple
      - explode: false
        in: header
        name: ehelply-data
        required: false
        schema:
          title: Ehelply-Data
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Successful Response
        "404":
          description: Not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Updateuser
      tags:
      - users
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    AppointmentBase:
      example:
        project_uuid: project_uuid
        review_group_uuid: review_group_uuid
        actual_finish_at: 2020-06-27T12:00:00.000000
        cancellation_reason: Sick
        expected_start_at: 2020-06-27T12:00:00.000000
        products:
          Service 1: Hair Cut
        meta_uuid: meta_uuid
        place_uuid: place_uuid
        cancellation_at: 2020-06-27T12:00:00.000000
        expected_finish_at: 2020-06-27T12:00:00.000000
        actual_start_at: 2020-06-27T12:00:00.000000
        cancellation_entity_uuid: user_uuid
        status: Awaiting Approval
      properties:
        project_uuid:
          example: project_uuid
          title: Project Uuid
          type: string
        place_uuid:
          example: place_uuid
          title: Place Uuid
          type: string
        review_group_uuid:
          example: review_group_uuid
          title: Review Group Uuid
          type: string
        expected_finish_at:
          example: 2020-06-27T12:00:00.000000
          title: Expected Finish At
          type: string
        expected_start_at:
          example: 2020-06-27T12:00:00.000000
          title: Expected Start At
          type: string
        actual_start_at:
          example: 2020-06-27T12:00:00.000000
          title: Actual Start At
          type: string
        actual_finish_at:
          example: 2020-06-27T12:00:00.000000
          title: Actual Finish At
          type: string
        products:
          example:
            Service 1: Hair Cut
          title: Products
          type: object
        meta_uuid:
          example: meta_uuid
          title: Meta Uuid
          type: string
        status:
          example: Awaiting Approval
          title: Status
          type: string
        cancellation_at:
          example: 2020-06-27T12:00:00.000000
          title: Cancellation At
          type: string
        cancellation_reason:
          example: Sick
          title: Cancellation Reason
          type: string
        cancellation_entity_uuid:
          example: user_uuid
          title: Cancellation Entity Uuid
          type: string
      title: AppointmentBase
      type: object
    AppointmentResponse:
      example:
        project_uuid: project_uuid
        review_group_uuid: review_group_uuid
        actual_finish_at: 2020-06-27T12:00:00.000000
        created_at: 2020-06-27T12:00:00.000000
        cancellation_reason: Sick
        expected_start_at: 2020-06-27T12:00:00.000000
        uuid: appointment_uuid
        deleted_at: 2020-06-27T12:00:00.000000
        products:
          Service 1: Hair Cut
        meta_uuid: meta_uuid
        updated_at: 2020-06-27T12:00:00.000000
        place_uuid: place_uuid
        cancellation_at: 2020-06-27T12:00:00.000000
        expected_finish_at: 2020-06-27T12:00:00.000000
        actual_start_at: 2020-06-27T12:00:00.000000
        cancellation_entity_uuid: user_uuid
        status: Awaiting Approval
      properties:
        project_uuid:
          example: project_uuid
          title: Project Uuid
          type: string
        place_uuid:
          example: place_uuid
          title: Place Uuid
          type: string
        review_group_uuid:
          example: review_group_uuid
          title: Review Group Uuid
          type: string
        expected_finish_at:
          example: 2020-06-27T12:00:00.000000
          title: Expected Finish At
          type: string
        expected_start_at:
          example: 2020-06-27T12:00:00.000000
          title: Expected Start At
          type: string
        actual_start_at:
          example: 2020-06-27T12:00:00.000000
          title: Actual Start At
          type: string
        actual_finish_at:
          example: 2020-06-27T12:00:00.000000
          title: Actual Finish At
          type: string
        products:
          example:
            Service 1: Hair Cut
          title: Products
          type: object
        meta_uuid:
          example: meta_uuid
          title: Meta Uuid
          type: string
        status:
          example: Awaiting Approval
          title: Status
          type: string
        cancellation_at:
          example: 2020-06-27T12:00:00.000000
          title: Cancellation At
          type: string
        cancellation_reason:
          example: Sick
          title: Cancellation Reason
          type: string
        cancellation_entity_uuid:
          example: user_uuid
          title: Cancellation Entity Uuid
          type: string
        uuid:
          example: appointment_uuid
          title: Uuid
          type: string
        created_at:
          example: 2020-06-27T12:00:00.000000
          title: Created At
          type: string
        updated_at:
          example: 2020-06-27T12:00:00.000000
          title: Updated At
          type: string
        deleted_at:
          example: 2020-06-27T12:00:00.000000
          title: Deleted At
          type: string
      required:
      - created_at
      - updated_at
      - uuid
      title: AppointmentResponse
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    BasicMeta:
      description: Basic meta
      properties:
        name:
          title: Name
          type: string
        slug:
          title: Slug
          type: string
      title: BasicMeta
      type: object
    BasicMetaCreate:
      description: Basic meta
      example:
        name: name
        slug: true
      properties:
        name:
          title: Name
          type: string
        slug:
          default: true
          title: Slug
          type: boolean
      title: BasicMetaCreate
      type: object
    CustomList:
      example:
        name: name
        description: description
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
      title: CustomList
      type: object
    DatesMeta:
      description: Date based meta
      example:
        updated_at: updated_at
        created_at: created_at
      properties:
        created_at:
          title: Created At
          type: string
        updated_at:
          title: Updated At
          type: string
      title: DatesMeta
      type: object
    DetailedMeta:
      description: Detailed meta based on Notes
      properties:
        summary_uuid:
          title: Summary Uuid
          type: string
        description_uuid:
          title: Description Uuid
          type: string
      title: DetailedMeta
      type: object
    DetailedMetaCreate:
      description: Detailed meta based on Notes
      example:
        summary: summary
        description: description
      properties:
        summary:
          title: Summary
          type: string
        description:
          title: Description
          type: string
      title: DetailedMetaCreate
      type: object
    Field:
      description: Field
      example:
        hint: hint
        icon: icon
        options:
          color: color
          insetLabel: insetLabel
          icon: icon
          caption: caption
          label: label
          counter: true
          type: type
          required: true
          selections:
          - selections:
            - name: name
              icon: icon
              value: 1.4658129805029452
            - name: name
              icon: icon
              value: 1.4658129805029452
            name: name
            type: type
          - selections:
            - name: name
              icon: icon
              value: 1.4658129805029452
            - name: name
              icon: icon
              value: 1.4658129805029452
            name: name
            type: type
          size: size
          hint: hint
          iconPosition: iconPosition
          placeholder: placeholder
          maxLength: 6.027456183070403
        placeholder: placeholder
        validations:
          value:
          - value
          - value
        label: label
        type: 0
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        type:
          title: Type
          type: integer
        placeholder:
          title: Placeholder
          type: string
        validations:
          $ref: '#/components/schemas/Validations'
        hint:
          title: Hint
          type: string
        icon:
          title: Icon
          type: string
        label:
          title: Label
          type: string
        options:
          $ref: '#/components/schemas/Options'
      title: Field
      type: object
    FieldDynamo:
      description: Field Dynamo
      example:
        hint: hint
        icon: icon
        options:
          color: color
          insetLabel: insetLabel
          icon: icon
          caption: caption
          label: label
          counter: true
          type: type
          required: true
          selections:
          - selections:
            - name: name
              icon: icon
              value: 1.4658129805029452
            - name: name
              icon: icon
              value: 1.4658129805029452
            name: name
            type: type
          - selections:
            - name: name
              icon: icon
              value: 1.4658129805029452
            - name: name
              icon: icon
              value: 1.4658129805029452
            name: name
            type: type
          size: size
          hint: hint
          iconPosition: iconPosition
          placeholder: placeholder
          maxLength: 6.027456183070403
        placeholder: placeholder
        validations:
          value:
          - value
          - value
        label: label
        type: 0
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        type:
          title: Type
          type: integer
        placeholder:
          title: Placeholder
          type: string
        validations:
          $ref: '#/components/schemas/Validations'
        hint:
          title: Hint
          type: string
        icon:
          title: Icon
          type: string
        label:
          title: Label
          type: string
        options:
          $ref: '#/components/schemas/Options'
      required:
      - uuid
      title: FieldDynamo
      type: object
    MetaChildren:
      example:
        child_uuid: child_uuid
        child_description: child_description
        child_name: child_name
      properties:
        child_name:
          title: Child Name
          type: string
        child_description:
          title: Child Description
          type: string
        child_uuid:
          title: Child Uuid
          type: string
      title: MetaChildren
      type: object
    MetaCreate:
      description: Meta
      example:
        parent_uuid: parent_uuid
        detailed:
          summary: summary
          description: description
        children:
        - child_uuid: child_uuid
          child_description: child_description
          child_name: child_name
        - child_uuid: child_uuid
          child_description: child_description
          child_name: child_name
        custom:
          name: name
          description: description
          list:
          - name: name
            description: description
          - name: name
            description: description
        basic:
          name: name
          slug: true
        fields:
        - hint: hint
          icon: icon
          options:
            color: color
            insetLabel: insetLabel
            icon: icon
            caption: caption
            label: label
            counter: true
            type: type
            required: true
            selections:
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            size: size
            hint: hint
            iconPosition: iconPosition
            placeholder: placeholder
            maxLength: 6.027456183070403
          placeholder: placeholder
          validations:
            value:
            - value
            - value
          label: label
          type: 0
          uuid: uuid
        - hint: hint
          icon: icon
          options:
            color: color
            insetLabel: insetLabel
            icon: icon
            caption: caption
            label: label
            counter: true
            type: type
            required: true
            selections:
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            size: size
            hint: hint
            iconPosition: iconPosition
            placeholder: placeholder
            maxLength: 6.027456183070403
          placeholder: placeholder
          validations:
            value:
            - value
            - value
          label: label
          type: 0
          uuid: uuid
      properties:
        basic:
          $ref: '#/components/schemas/BasicMetaCreate'
        detailed:
          $ref: '#/components/schemas/DetailedMetaCreate'
        custom:
          $ref: '#/components/schemas/MetaCustom'
        fields:
          items:
            $ref: '#/components/schemas/Field'
          title: Fields
          type: array
        children:
          items:
            $ref: '#/components/schemas/MetaChildren'
          title: Children
          type: array
        parent_uuid:
          title: Parent Uuid
          type: string
      title: MetaCreate
      type: object
    MetaCustom:
      example:
        name: name
        description: description
        list:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        list:
          items:
            $ref: '#/components/schemas/CustomList'
          title: List
          type: array
      title: MetaCustom
      type: object
    MetaDynamo:
      description: A meta from DynamoDB
      example:
        parent_uuid: parent_uuid
        detailed: null
        children:
        - child_uuid: child_uuid
          child_description: child_description
          child_name: child_name
        - child_uuid: child_uuid
          child_description: child_description
          child_name: child_name
        custom:
          name: name
          description: description
          list:
          - name: name
            description: description
          - name: name
            description: description
        dates:
          updated_at: updated_at
          created_at: created_at
        basic: null
        fields:
        - hint: hint
          icon: icon
          options:
            color: color
            insetLabel: insetLabel
            icon: icon
            caption: caption
            label: label
            counter: true
            type: type
            required: true
            selections:
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            size: size
            hint: hint
            iconPosition: iconPosition
            placeholder: placeholder
            maxLength: 6.027456183070403
          placeholder: placeholder
          validations:
            value:
            - value
            - value
          label: label
          type: 0
          uuid: uuid
        - hint: hint
          icon: icon
          options:
            color: color
            insetLabel: insetLabel
            icon: icon
            caption: caption
            label: label
            counter: true
            type: type
            required: true
            selections:
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            - selections:
              - name: name
                icon: icon
                value: 1.4658129805029452
              - name: name
                icon: icon
                value: 1.4658129805029452
              name: name
              type: type
            size: size
            hint: hint
            iconPosition: iconPosition
            placeholder: placeholder
            maxLength: 6.027456183070403
          placeholder: placeholder
          validations:
            value:
            - value
            - value
          label: label
          type: 0
          uuid: uuid
        uuid: uuid
      properties:
        basic:
          $ref: '#/components/schemas/Basic'
        detailed:
          $ref: '#/components/schemas/Detailed'
        custom:
          $ref: '#/components/schemas/MetaCustom'
        dates:
          $ref: '#/components/schemas/DatesMeta'
        fields:
          items:
            $ref: '#/components/schemas/Field'
          title: Fields
          type: array
        children:
          default: []
          items:
            $ref: '#/components/schemas/MetaChildren'
          title: Children
          type: array
        parent_uuid:
          title: Parent Uuid
          type: string
        uuid:
          title: Uuid
          type: string
      required:
      - uuid
      title: MetaDynamo
      type: object
    MetaSlugger:
      description: Meta slugger
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: MetaSlugger
      type: object
    OptionGroup:
      example:
        selections:
        - name: name
          icon: icon
          value: 1.4658129805029452
        - name: name
          icon: icon
          value: 1.4658129805029452
        name: name
        type: type
      properties:
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
        selections:
          items:
            $ref: '#/components/schemas/Selection'
          title: Selections
          type: array
      title: OptionGroup
      type: object
    Options:
      example:
        color: color
        insetLabel: insetLabel
        icon: icon
        caption: caption
        label: label
        counter: true
        type: type
        required: true
        selections:
        - selections:
          - name: name
            icon: icon
            value: 1.4658129805029452
          - name: name
            icon: icon
            value: 1.4658129805029452
          name: name
          type: type
        - selections:
          - name: name
            icon: icon
            value: 1.4658129805029452
          - name: name
            icon: icon
            value: 1.4658129805029452
          name: name
          type: type
        size: size
        hint: hint
        iconPosition: iconPosition
        placeholder: placeholder
        maxLength: 6.027456183070403
      properties:
        required:
          title: Required
          type: boolean
        label:
          title: Label
          type: string
        insetLabel:
          title: Insetlabel
          type: string
        placeholder:
          title: Placeholder
          type: string
        hint:
          title: Hint
          type: string
        icon:
          title: Icon
          type: string
        maxLength:
          title: Maxlength
          type: number
        counter:
          title: Counter
          type: boolean
        caption:
          title: Caption
          type: string
        color:
          title: Color
          type: string
        size:
          title: Size
          type: string
        type:
          title: Type
          type: string
        iconPosition:
          title: Iconposition
          type: string
        selections:
          items:
            $ref: '#/components/schemas/OptionGroup'
          title: Selections
          type: array
      title: Options
      type: object
    Selection:
      example:
        name: name
        icon: icon
        value: 1.4658129805029452
      properties:
        name:
          title: Name
          type: string
        value:
          title: Value
          type: number
        icon:
          title: Icon
          type: string
      title: Selection
      type: object
    Validations:
      example:
        value:
        - value
        - value
      properties:
        value:
          items:
            type: string
          title: Value
          type: array
      title: Validations
      type: object
    NotesHTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/NotesValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    NoteBase:
      description: |-
        Note
        This is used as the payload to endpoints
      example:
        meta:
          previous_version: previous_version
          author: author
          original_author: original_author
          next_version: next_version
        time: time
        content: content
      properties:
        content:
          title: Content
          type: string
        time:
          title: Time
          type: string
        meta:
          $ref: '#/components/schemas/NoteMeta'
      required:
      - content
      - meta
      - time
      title: NoteBase
      type: object
    NoteDynamo:
      description: A note from DynamoDB
      example:
        meta:
          previous_version: previous_version
          author: author
          original_author: original_author
          next_version: next_version
        time: time
        uuid: uuid
        content: ""
      properties:
        uuid:
          title: Uuid
          type: string
        content:
          format: binary
          title: Content
          type: string
        time:
          title: Time
          type: string
        meta:
          $ref: '#/components/schemas/NoteMeta'
      required:
      - meta
      - time
      - uuid
      title: NoteDynamo
      type: object
    NoteDynamoHistory:
      description: A note from Dynamo DB including n amount of version history of
        that note
      example:
        meta:
          previous_version: previous_version
          author: author
          original_author: original_author
          next_version: next_version
        time: time
        history:
        - meta:
            previous_version: previous_version
            author: author
            original_author: original_author
            next_version: next_version
          time: time
          uuid: uuid
          content: ""
        - meta:
            previous_version: previous_version
            author: author
            original_author: original_author
            next_version: next_version
          time: time
          uuid: uuid
          content: ""
        uuid: uuid
        content: ""
      properties:
        uuid:
          title: Uuid
          type: string
        content:
          format: binary
          title: Content
          type: string
        time:
          title: Time
          type: string
        meta:
          $ref: '#/components/schemas/NoteMeta'
        history:
          default: []
          items:
            $ref: '#/components/schemas/NoteDynamo'
          title: History
          type: array
      required:
      - meta
      - time
      - uuid
      title: NoteDynamoHistory
      type: object
    NoteMeta:
      description: Metadata associated to a note
      example:
        previous_version: previous_version
        author: author
        original_author: original_author
        next_version: next_version
      properties:
        original_author:
          title: Original Author
          type: string
        author:
          title: Author
          type: string
        previous_version:
          title: Previous Version
          type: string
        next_version:
          title: Next Version
          type: string
      required:
      - author
      title: NoteMeta
      type: object
    NotesValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
    AddressBase:
      description: |-
        **:param** address_type                        **type:** string or None

        **:param** address_line_1                      **type:** string or None

        **:param** address_line_2                      **type:** string or None

        **:param** postal_zip_code                     **type:** string or None

        **:param** city                                **type:** string or None

        **:param** province_state                      **type:** string or None

        **:param** country                             **type:** string or None

        **:param** lat                                 **type:** string or None

        **:param** lng                                 **type:** string or None
      properties:
        address_type:
          example: Mailing
          title: Address Type
          type: string
        address_line_1:
          example: 1234 Street Name
          title: Address Line 1
          type: string
        address_line_2:
          example: "Unit #2"
          title: Address Line 2
          type: string
        postal_zip_code:
          example: 123 456
          title: Postal Zip Code
          type: string
        city:
          example: city name
          title: City
          type: string
        province_state:
          example: province
          title: Province State
          type: string
        country:
          example: Canada
          title: Country
          type: string
        lat:
          example: "123"
          title: Lat
          type: string
        lng:
          example: "-123"
          title: Lng
          type: string
      title: AddressBase
      type: object
    CategoryBase:
      description: |-
        **:param** name                                **type:** string
        **:param** meta                                **type:** dict or None

        **:param** project_uuid                        **type:** string or None
      example:
        project_uuid: project_uuid_1234
        meta_uuid: meta_uuid_1234
        meta:
          Category Field: field value
        name: Example Company
      properties:
        name:
          example: Example Company
          title: Name
          type: string
        meta_uuid:
          example: meta_uuid_1234
          title: Meta Uuid
          type: string
        meta:
          example:
            Category Field: field value
          title: Meta
          type: object
        project_uuid:
          example: project_uuid_1234
          title: Project Uuid
          type: string
      required:
      - name
      title: CategoryBase
      type: object
    CategoryDb:
      description: |-
        **:param** uuid                                **type:** string
        **:param** name                                **type:** string
        **:param** project_uuid                        **type:** string or None

        **:param** meta_uuid                           **type:** string or None
      example:
        project_uuid: project_uuid_1234
        meta_uuid: meat_uuid_1234
        name: Example Category
        uuid: uuid_1234
      properties:
        uuid:
          example: uuid_1234
          title: Uuid
          type: string
        name:
          example: Example Category
          title: Name
          type: string
        project_uuid:
          example: project_uuid_1234
          title: Project Uuid
          type: string
        meta_uuid:
          example: meat_uuid_1234
          title: Meta Uuid
          type: string
      required:
      - name
      - uuid
      title: CategoryDb
      type: object
    CompanyBase:
      description: |-
        **:param** name                                **type:** string
        **:param** summary                             **type:** string or None

        **:param** public                              **type:** bool or None

        **:param** meta                                **type:** dict or None

        **:param** contact                             **type:** ContactBase or None
      example:
        summary: Summary of the company
        public: true
        meta: {}
        contact:
          website: www.ehelply.com
          phones:
          - name: cell
            value: "1234567"
          socials:
          - name: Twitter
            value: twitter.com
          email: test@example.com
        name: Example Company
      properties:
        name:
          example: Example Company
          title: Name
          type: string
        summary:
          example: Summary of the company
          title: Summary
          type: string
        public:
          default: true
          example: true
          title: Public
          type: boolean
        meta:
          example: {}
          title: Meta
          type: object
        contact:
          $ref: '#/components/schemas/ContactBase'
      title: CompanyBase
      type: object
    CompanyResponse:
      description: |-
        **:param** name                                **type:** string
        **:param** summary                             **type:** string or None

        **:param** public                              **type:** bool or None

        **:param** meta                                **type:** dict or None

        **:param** contact                             **type:** ContactBase or None
      example:
        summary: Summary of the company
        project_uuid: project_uuid 1234
        created_at: 2020-06-27T12:00:00.000000
        uuid: uuid_1234
        deleted_at: 2020-06-27T12:00:00.000000
        tags: []
        meta_uuid: meta_uuid 1234
        places: []
        public: true
        updated_at: 2020-06-27T12:00:00.000000
        meta: {}
        contact:
          website: www.ehelply.com
          phones:
          - name: cell
            value: "1234567"
          socials:
          - name: Twitter
            value: twitter.com
          email: test@example.com
        name: Example Company
        categories: []
      properties:
        name:
          example: Example Company
          title: Name
          type: string
        summary:
          example: Summary of the company
          title: Summary
          type: string
        public:
          default: true
          example: true
          title: Public
          type: boolean
        meta:
          example: {}
          title: Meta
          type: object
        contact:
          $ref: '#/components/schemas/ContactBase'
        uuid:
          example: uuid_1234
          title: Uuid
          type: string
        project_uuid:
          example: project_uuid 1234
          title: Project Uuid
          type: string
        meta_uuid:
          example: meta_uuid 1234
          title: Meta Uuid
          type: string
        tags:
          example: []
          items:
            $ref: '#/components/schemas/TagBase'
          title: Tags
          type: array
        categories:
          example: []
          items:
            $ref: '#/components/schemas/CategoryBase'
          title: Categories
          type: array
        places:
          example: []
          items:
            $ref: '#/components/schemas/PlaceBase'
          title: Places
          type: array
        created_at:
          example: 2020-06-27T12:00:00.000000
          title: Created At
          type: string
        updated_at:
          example: 2020-06-27T12:00:00.000000
          title: Updated At
          type: string
        deleted_at:
          example: 2020-06-27T12:00:00.000000
          title: Deleted At
          type: string
      required:
      - uuid
      title: CompanyResponse
      type: object
    ContactBase:
      description: "**:param** phones                              **type:** List[ContactKeys]\
        \ or None\n\n**:param** email                               **type:** string\
        \ or None\n\n**:param** website                             **type:** string\
        \ or None\n\n**:param** socials                             **type:** List[ContactKeys]\
        \ or None"
      example:
        website: www.ehelply.com
        phones:
        - name: cell
          value: "1234567"
        socials:
        - name: Twitter
          value: twitter.com
        email: test@example.com
      properties:
        phones:
          example:
          - name: cell
            value: "1234567"
          items:
            $ref: '#/components/schemas/ContactMethod'
          title: Phones
          type: array
        email:
          example: test@example.com
          title: Email
          type: string
        website:
          example: www.ehelply.com
          title: Website
          type: string
        socials:
          example:
          - name: Twitter
            value: twitter.com
          items:
            $ref: '#/components/schemas/ContactMethod'
          title: Socials
          type: array
      title: ContactBase
      type: object
    ContactMethod:
      properties:
        name:
          default: ""
          example: Primary Number
          title: Name
          type: string
        value:
          default: ""
          example: 123-456-7890
          title: Value
          type: string
      title: ContactMethod
      type: object
    Page:
      description: Page state
      example:
        pagination:
          has_previous_page: true
          next_page: 2
          has_next_page: true
          total_pages: 5
          previous_page: 5
          total_items: 1
          current_page: 0
          page_size: 6
        items:
        - ""
        - ""
      properties:
        items:
          items: {}
          title: Items
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
      required:
      - items
      - pagination
      title: Page
      type: object
    Pagination:
      description: Pagination state
      example:
        has_previous_page: true
        next_page: 2
        has_next_page: true
        total_pages: 5
        previous_page: 5
        total_items: 1
        current_page: 0
        page_size: 6
      properties:
        current_page:
          title: Current Page
          type: integer
        page_size:
          title: Page Size
          type: integer
        total_items:
          title: Total Items
          type: integer
        total_pages:
          title: Total Pages
          type: integer
        has_previous_page:
          title: Has Previous Page
          type: boolean
        has_next_page:
          title: Has Next Page
          type: boolean
        previous_page:
          title: Previous Page
          type: integer
        next_page:
          title: Next Page
          type: integer
      required:
      - current_page
      - has_next_page
      - has_previous_page
      - page_size
      - total_items
      - total_pages
      title: Pagination
      type: object
    PlaceBase:
      description: |-
        **:param** name                                **type:** string
        **:param** summary                             **type:** string or None

        **:param** public                              **type:** bool or None

        **:param** meta                                **type:** dict or None

        **:param** addresses                           **type:** PlaceAddress or None

        **:param** contact                             **type:** ContactBase or None
      example:
        summary: Summary of the clinic
        addresses: []
        public: true
        meta: {}
        contact:
          website: www.ehelply.com
          phones:
          - name: cell
            value: "1234567"
          socials:
          - name: Twitter
            value: twitter.com
          email: test@example.com
        name: Example Clinic
      properties:
        name:
          example: Example Clinic
          title: Name
          type: string
        summary:
          example: Summary of the clinic
          title: Summary
          type: string
        public:
          default: true
          example: true
          title: Public
          type: boolean
        meta:
          example: {}
          title: Meta
          type: object
        addresses:
          example: []
          items:
            $ref: '#/components/schemas/AddressBase'
          title: Addresses
          type: array
        contact:
          $ref: '#/components/schemas/ContactBase'
      required:
      - name
      title: PlaceBase
      type: object
    PlaceResponse:
      description: |-
        **:param** name                                **type:** string
        **:param** summary                             **type:** string or None

        **:param** public                              **type:** bool or None

        **:param** meta                                **type:** dict or None

        **:param** addresses                           **type:** PlaceAddress or None

        **:param** contact                             **type:** ContactBase or None
      example:
        summary: Summary of the clinic
        project_uuid: project_uuid 1234
        addresses: []
        created_at: 2020-06-27T12:00:00.000000
        uuid: uuid_1234
        deleted_at: 2020-06-27T12:00:00.000000
        tags: []
        meta_uuid: meta_uuid 1234
        public: true
        updated_at: 2020-06-27T12:00:00.000000
        meta: {}
        contact:
          website: www.ehelply.com
          phones:
          - name: cell
            value: "1234567"
          socials:
          - name: Twitter
            value: twitter.com
          email: test@example.com
        name: Example Clinic
        company: null
        categories: []
      properties:
        name:
          example: Example Clinic
          title: Name
          type: string
        summary:
          example: Summary of the clinic
          title: Summary
          type: string
        public:
          default: true
          example: true
          title: Public
          type: boolean
        meta:
          example: {}
          title: Meta
          type: object
        addresses:
          example: []
          items:
            $ref: '#/components/schemas/AddressBase'
          title: Addresses
          type: array
        contact:
          $ref: '#/components/schemas/ContactBase'
        uuid:
          example: uuid_1234
          title: Uuid
          type: string
        project_uuid:
          example: project_uuid 1234
          title: Project Uuid
          type: string
        meta_uuid:
          example: meta_uuid 1234
          title: Meta Uuid
          type: string
        tags:
          example: []
          items:
            $ref: '#/components/schemas/TagBase'
          title: Tags
          type: array
        categories:
          example: []
          items:
            $ref: '#/components/schemas/CategoryBase'
          title: Categories
          type: array
        company:
          $ref: '#/components/schemas/Company'
        created_at:
          example: 2020-06-27T12:00:00.000000
          title: Created At
          type: string
        updated_at:
          example: 2020-06-27T12:00:00.000000
          title: Updated At
          type: string
        deleted_at:
          example: 2020-06-27T12:00:00.000000
          title: Deleted At
          type: string
      required:
      - name
      - uuid
      title: PlaceResponse
      type: object
    StaffCreate:
      description: |-
        **:param** project_uuid                        **type:** string or None

        **:param** entity_uuid                         **type:** string or None

        **:param** schedule_uuid                       **type:** string or None

        **:param** catalog_uuid                        **type:** string or None

        **:param** review_group_uuid                   **type:** string or None
      example:
        project_uuid: project_uuid_1234
        schedule_uuid: schedule_uuid_1234
        entity_uuid: entity_uuid_1234
        review_group_uuid: review_uuid_1234
        catalog_uuid: catalog_uuid_1234
      properties:
        entity_uuid:
          example: entity_uuid_1234
          title: Entity Uuid
          type: string
        project_uuid:
          example: project_uuid_1234
          title: Project Uuid
          type: string
        schedule_uuid:
          example: schedule_uuid_1234
          title: Schedule Uuid
          type: string
        catalog_uuid:
          example: catalog_uuid_1234
          title: Catalog Uuid
          type: string
        review_group_uuid:
          example: review_uuid_1234
          title: Review Group Uuid
          type: string
      required:
      - entity_uuid
      title: StaffCreate
      type: object
    StaffDb:
      description: |-
        **:param** uuid                                **type:** string
        **:param** project_uuid                        **type:** string or None

        **:param** entity_uuid                         **type:** string or None

        **:param** schedule_uuid                       **type:** string or None

        **:param** catalog_uuid                        **type:** string or None

        **:param** review_group_uuid                   **type:** string or None

        **:param** created_at                          **type:** string or None

        **:param** updated_at                          **type:** string or None

        **:param** deleted_at                          **type:** string or None
      example:
        project_uuid: project_uuid_1234
        schedule_uuid: schedule_uuid_1234
        entity_uuid: entity_uuid_1234
        review_group_uuid: review_uuid_1234
        updated_at: 2020-06-27T12:00:00.000000
        catalog_uuid: catalog_uuid_1234
        created_at: 2020-06-27T12:00:00.000000
        uuid: uuid_1234
        deleted_at: 2020-06-27T12:00:00.000000
      properties:
        uuid:
          example: uuid_1234
          title: Uuid
          type: string
        project_uuid:
          example: project_uuid_1234
          title: Project Uuid
          type: string
        entity_uuid:
          example: entity_uuid_1234
          title: Entity Uuid
          type: string
        schedule_uuid:
          example: schedule_uuid_1234
          title: Schedule Uuid
          type: string
        catalog_uuid:
          example: catalog_uuid_1234
          title: Catalog Uuid
          type: string
        review_group_uuid:
          example: review_uuid_1234
          title: Review Group Uuid
          type: string
        created_at:
          example: 2020-06-27T12:00:00.000000
          title: Created At
          type: string
        updated_at:
          example: 2020-06-27T12:00:00.000000
          title: Updated At
          type: string
        deleted_at:
          example: 2020-06-27T12:00:00.000000
          title: Deleted At
          type: string
      required:
      - uuid
      title: StaffDb
      type: object
    StaffResponse:
      description: |-
        **:param** uuid                                **type:** string
        **:param** project_uuid                        **type:** string or None

        **:param** entity                              **type:** string or None

        **:param** place                               **type:** string or None

        **:param** company                             **type:** string or None

        **:param** schedule                            **type:** string or None

        **:param** catalog                             **type:** string or None

        **:param** reviews                             **type:** string or None

        **:param** created_at                          **type:** string or None

        **:param** updated_at                          **type:** string or None

        **:param** deleted_at                          **type:** string or None
      example:
        project_uuid: project_uuid_1234
        catalog: {}
        created_at: 2020-06-27T12:00:00.000000
        uuid: uuid_1234
        deleted_at: 2020-06-27T12:00:00.000000
        schedule: {}
        reviews: {}
        updated_at: 2020-06-27T12:00:00.000000
        company_roles: []
        company: {}
        place: {}
        place_roles: []
        entity: {}
      properties:
        uuid:
          example: uuid_1234
          title: Uuid
          type: string
        project_uuid:
          example: project_uuid_1234
          title: Project Uuid
          type: string
        entity:
          example: {}
          title: Entity
          type: object
        place:
          example: {}
          title: Place
          type: object
        place_roles:
          example: []
          items:
            type: string
          title: Place Roles
          type: array
        company:
          example: {}
          title: Company
          type: object
        company_roles:
          example: []
          items:
            type: string
          title: Company Roles
          type: array
        schedule:
          example: {}
          title: Schedule
          type: object
        catalog:
          example: {}
          title: Catalog
          type: object
        reviews:
          example: {}
          title: Reviews
          type: object
        created_at:
          example: 2020-06-27T12:00:00.000000
          title: Created At
          type: string
        updated_at:
          example: 2020-06-27T12:00:00.000000
          title: Updated At
          type: string
        deleted_at:
          example: 2020-06-27T12:00:00.000000
          title: Deleted At
          type: string
      required:
      - uuid
      title: StaffResponse
      type: object
    TagBase:
      description: |-
        **:param** name                                **type:** string
        **:param** project_uuid                        **type:** string or None
      example:
        project_uuid: project_uuid_1234
        name: Example Tag
      properties:
        name:
          example: Example Tag
          title: Name
          type: string
        project_uuid:
          example: project_uuid_1234
          title: Project Uuid
          type: string
      required:
      - name
      title: TagBase
      type: object
    TagDb:
      description: |-
        **:param** uuid                                **type:** string
        **:param** name                                **type:** string
        **:param** project_uuid                        **type:** string or None
      example:
        project_uuid: project_uuid_1234
        name: Example Category
        uuid: uuid_1234
      properties:
        uuid:
          example: uuid_1234
          title: Uuid
          type: string
        name:
          example: Example Category
          title: Name
          type: string
        project_uuid:
          example: project_uuid_1234
          title: Project Uuid
          type: string
      required:
      - name
      - uuid
      title: TagDb
      type: object
    CatalogBase:
      example:
        featured:
          Special Feature: Plants
        meta_data: {}
        name: Product Name
        sub_catalogs:
          Summer Catalog: []
      properties:
        meta_data:
          example: {}
          title: Meta Data
          type: object
        name:
          example: Product Name
          title: Name
          type: string
        featured:
          example:
            Special Feature: Plants
          title: Featured
          type: object
        sub_catalogs:
          example:
            Summer Catalog: []
          title: Sub Catalogs
          type: object
      title: CatalogBase
      type: object
    CatalogReturn:
      example:
        project_uuid: project_uuid
        meta_uuid: meta_uuid
        featured:
          Special Feature: Plants
        product_uuids:
        - product_uuid
        updated_at: 2020-06-27T12:00:00.000000
        meta_data: {}
        name: Product Name
        created_at: 2020-06-27T12:00:00.000000
        sub_catalogs:
          Summer Catalog: []
        uuid: uuid
        deleted_at: 2020-06-27T12:00:00.000000
      properties:
        meta_data:
          example: {}
          title: Meta Data
          type: object
        name:
          example: Product Name
          title: Name
          type: string
        featured:
          example:
            Special Feature: Plants
          title: Featured
          type: object
        sub_catalogs:
          example:
            Summer Catalog: []
          title: Sub Catalogs
          type: object
        uuid:
          example: uuid
          title: Uuid
          type: string
        meta_uuid:
          example: meta_uuid
          title: Meta Uuid
          type: string
        project_uuid:
          example: project_uuid
          title: Project Uuid
          type: string
        product_uuids:
          example:
          - product_uuid
          items:
            type: string
          title: Product Uuids
          type: array
        created_at:
          example: 2020-06-27T12:00:00.000000
          title: Created At
          type: string
        updated_at:
          example: 2020-06-27T12:00:00.000000
          title: Updated At
          type: string
        deleted_at:
          example: 2020-06-27T12:00:00.000000
          title: Deleted At
          type: string
      required:
      - project_uuid
      - uuid
      title: CatalogReturn
      type: object
    CreateReview:
      example:
        rating: 0
        review_text: review_text
        max_rating: 6
      properties:
        rating:
          title: Rating
          type: integer
        max_rating:
          title: Max Rating
          type: integer
        review_text:
          title: Review Text
          type: string
      required:
      - max_rating
      - rating
      - review_text
      title: CreateReview
      type: object
    ProductBase:
      example:
        review_group_uuid: review_group_uuid
        quantity_for_public: 10
        addons:
        - addon1
        - addon_uuid
        price: 10000
        meta_data: {}
        name: Product Name
        collection_uuid: collection_uuid
      properties:
        meta_data:
          example: {}
          title: Meta Data
          type: object
        collection_uuid:
          example: collection_uuid
          title: Collection Uuid
          type: string
        review_group_uuid:
          example: review_group_uuid
          title: Review Group Uuid
          type: string
        addons:
          example:
          - addon1
          - addon_uuid
          items:
            type: string
          title: Addons
          type: array
        name:
          example: Product Name
          title: Name
          type: string
        price:
          example: 10000
          title: Price
          type: integer
        quantity_for_public:
          example: 10
          title: Quantity For Public
          type: integer
      required:
      - price
      - quantity_for_public
      title: ProductBase
      type: object
    ProductReturn:
      example:
        project_uuid: project_uuid
        review_group_uuid: review_group_uuid
        addons:
        - addon1
        - addon_uuid
        addon_list: []
        created_at: 2020-06-27T12:00:00.000000
        collection_uuid: collection_uuid
        uuid: uuid
        deleted_at: 2020-06-27T12:00:00.000000
        meta_uuid: meta_uuid
        quantity_for_public: 10
        updated_at: 2020-06-27T12:00:00.000000
        price: 10000
        catalog_uuid: catalog_uuid
        meta_data: {}
        name: Product Name
      properties:
        meta_data:
          example: {}
          title: Meta Data
          type: object
        collection_uuid:
          example: collection_uuid
          title: Collection Uuid
          type: string
        review_group_uuid:
          example: review_group_uuid
          title: Review Group Uuid
          type: string
        addons:
          example:
          - addon1
          - addon_uuid
          items:
            type: string
          title: Addons
          type: array
        name:
          example: Product Name
          title: Name
          type: string
        price:
          example: 10000
          title: Price
          type: integer
        quantity_for_public:
          example: 10
          title: Quantity For Public
          type: integer
        uuid:
          example: uuid
          title: Uuid
          type: string
        meta_uuid:
          example: meta_uuid
          title: Meta Uuid
          type: string
        project_uuid:
          example: project_uuid
          title: Project Uuid
          type: string
        catalog_uuid:
          example: catalog_uuid
          title: Catalog Uuid
          type: string
        addon_list:
          example: []
          items:
            type: object
          title: Addon List
          type: array
        created_at:
          example: 2020-06-27T12:00:00.000000
          title: Created At
          type: string
        updated_at:
          example: 2020-06-27T12:00:00.000000
          title: Updated At
          type: string
        deleted_at:
          example: 2020-06-27T12:00:00.000000
          title: Deleted At
          type: string
      required:
      - price
      - project_uuid
      - quantity_for_public
      - uuid
      title: ProductReturn
      type: object
    UpdateReview:
      example:
        rating: 0
        review_text: review_text
        max_rating: 6
      properties:
        rating:
          title: Rating
          type: integer
        max_rating:
          title: Max Rating
          type: integer
        review_text:
          title: Review Text
          type: string
      title: UpdateReview
      type: object
    AlarmAcknowledge:
      example:
        acknowledger_uuid: acknowledger_uuid
      properties:
        acknowledger_uuid:
          title: Acknowledger Uuid
          type: string
      required:
      - acknowledger_uuid
      title: AlarmAcknowledge
      type: object
    AlarmAssign:
      example:
        assignee_uuid: assignee_uuid
      properties:
        assignee_uuid:
          title: Assignee Uuid
          type: string
      required:
      - assignee_uuid
      title: AlarmAssign
      type: object
    AlarmCreate:
      example:
        severity: severity
        summary: summary
        process: process
        name: name
        description: description
      properties:
        process:
          title: Process
          type: string
        severity:
          title: Severity
          type: string
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
        description:
          title: Description
          type: string
      title: AlarmCreate
      type: object
    AlarmIgnore:
      example:
        ignorer_uuid: ignorer_uuid
      properties:
        ignorer_uuid:
          title: Ignorer Uuid
          type: string
      required:
      - ignorer_uuid
      title: AlarmIgnore
      type: object
    AlarmNote:
      example:
        message: message
        author_uuid: author_uuid
      properties:
        author_uuid:
          title: Author Uuid
          type: string
        message:
          title: Message
          type: string
      required:
      - author_uuid
      - message
      title: AlarmNote
      type: object
    AlarmResponse:
      example:
        severity: severity
        ticket_uuid: ticket_uuid
        summary: summary
        acknowledger_uuid: acknowledger_uuid
        note:
        - "{}"
        - "{}"
        process: process
        ignored_at: ignored_at
        terminater_uuid: terminater_uuid
        count: 0
        description: description
        created_at: created_at
        ignorer_uuid: ignorer_uuid
        latest_at: latest_at
        uuid: uuid
        service_uuid: service_uuid
        assignee_uuid: assignee_uuid
        stage: stage
        name: name
        cleared_at: cleared_at
        acknowledged_at: acknowledged_at
        terminated_at: terminated_at
      properties:
        uuid:
          title: Uuid
          type: string
        service_uuid:
          title: Service Uuid
          type: string
        count:
          title: Count
          type: integer
        stage:
          title: Stage
          type: string
        process:
          title: Process
          type: string
        severity:
          title: Severity
          type: string
        ticket_uuid:
          title: Ticket Uuid
          type: string
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
        description:
          title: Description
          type: string
        note:
          items:
            type: object
          title: Note
          type: array
        created_at:
          title: Created At
          type: string
        latest_at:
          title: Latest At
          type: string
        acknowledged_at:
          title: Acknowledged At
          type: string
        ignored_at:
          title: Ignored At
          type: string
        cleared_at:
          title: Cleared At
          type: string
        terminated_at:
          title: Terminated At
          type: string
        assignee_uuid:
          title: Assignee Uuid
          type: string
        acknowledger_uuid:
          title: Acknowledger Uuid
          type: string
        ignorer_uuid:
          title: Ignorer Uuid
          type: string
        terminater_uuid:
          title: Terminater Uuid
          type: string
      title: AlarmResponse
      type: object
    AlarmTerminate:
      example:
        terminater_uuid: terminater_uuid
      properties:
        terminater_uuid:
          title: Terminater Uuid
          type: string
      required:
      - terminater_uuid
      title: AlarmTerminate
      type: object
    AlarmTicket:
      example:
        ticket_uuid: ticket_uuid
      properties:
        ticket_uuid:
          title: Ticket Uuid
          type: string
      required:
      - ticket_uuid
      title: AlarmTicket
      type: object
    AttachPaymentToProject:
      properties:
        payment_type:
          title: Payment Type
          type: string
        number:
          title: Number
          type: string
        exp_month:
          title: Exp Month
          type: integer
        exp_year:
          title: Exp Year
          type: integer
        cvc:
          title: Cvc
          type: string
      required:
      - cvc
      - exp_month
      - exp_year
      - number
      - payment_type
      title: AttachPaymentToProject
      type: object
    Contact:
      example:
        phone: phone
        last_name: last_name
        first_name: first_name
        email: email
      properties:
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        email:
          title: Email
          type: string
        phone:
          title: Phone
          type: string
      required:
      - email
      - first_name
      - last_name
      - phone
      title: Contact
      type: object
    ContactResponse:
      example:
        phone: phone
        last_name: last_name
        contact_id: contact_id
        first_name: first_name
        email: email
      properties:
        contact_id:
          title: Contact Id
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        email:
          title: Email
          type: string
        phone:
          title: Phone
          type: string
      required:
      - contact_id
      - email
      - first_name
      - last_name
      - phone
      title: ContactResponse
      type: object
    CreateKeyResponse:
      example:
        access: access
        secret: secret
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        access:
          title: Access
          type: string
        secret:
          title: Secret
          type: string
      required:
      - access
      - secret
      - uuid
      title: CreateKeyResponse
      type: object
    CreateTicket:
      example:
        subject: subject
        priority: priority
      properties:
        priority:
          title: Priority
          type: string
        subject:
          title: Subject
          type: string
      required:
      - priority
      - subject
      title: CreateTicket
      type: object
    GetServiceServiceWithSpecsResponse:
      example:
        services:
        - services
        - services
      properties:
        services:
          items:
            type: string
          title: Services
          type: array
      required:
      - services
      title: GetServiceServiceWithSpecsResponse
      type: object
    GetServiceSpecResponse:
      example:
        contents: contents
      properties:
        contents:
          title: Contents
          type: string
      required:
      - contents
      title: GetServiceSpecResponse
      type: object
    GetServiceSpecsResponse:
      example:
        specs:
        - specs
        - specs
      properties:
        specs:
          items:
            type: string
          title: Specs
          type: array
      required:
      - specs
      title: GetServiceSpecsResponse
      type: object
    HeartbeatResponse:
      example:
        process: process
        service_uuid: service_uuid
        stage: stage
        health: health
        created_at: created_at
        uuid: uuid
        platform: "{}"
      properties:
        uuid:
          title: Uuid
          type: string
        service_uuid:
          title: Service Uuid
          type: string
        stage:
          title: Stage
          type: string
        process:
          title: Process
          type: string
        health:
          title: Health
          type: string
        platform:
          title: Platform
          type: object
        created_at:
          title: Created At
          type: string
      required:
      - health
      - platform
      - process
      - service_uuid
      - stage
      title: HeartbeatResponse
      type: object
    KpiResponse:
      example:
        service_uuid: service_uuid
        fetched_at: fetched_at
        created_at: created_at
        uuid: uuid
        kpis:
        - ""
        - ""
      properties:
        uuid:
          title: Uuid
          type: string
        service_uuid:
          title: Service Uuid
          type: string
        kpis:
          items: {}
          title: Kpis
          type: array
        created_at:
          title: Created At
          type: string
        fetched_at:
          title: Fetched At
          type: string
      required:
      - kpis
      - service_uuid
      title: KpiResponse
      type: object
    LoggingDynamo:
      example:
        severity: severity
        log: "{}"
        service: service
        subject: subject
        time: time
      properties:
        service:
          title: Service
          type: string
        time:
          title: Time
          type: string
        log:
          title: Log
          type: object
        severity:
          title: Severity
          type: string
        subject:
          title: Subject
          type: string
      required:
      - log
      - service
      - severity
      - subject
      - time
      title: LoggingDynamo
      type: object
    ParticipantCreate:
      description: Contains field for when we create a participant only
      example:
        user_uuid: user_uuid
        meta:
          some_key: some_value
      properties:
        meta:
          description: Dictionary containing any data you would like
          example:
            some_key: some_value
          title: Meta
          type: object
        user_uuid:
          title: User Uuid
          type: string
      title: ParticipantCreate
      type: object
    ParticipantUpdate:
      description: Fields for updating participants including the participant uuid
      example:
        user_uuid: user_uuid
        meta:
          some_key: some_value
        uuid: uuid
      properties:
        meta:
          description: Dictionary containing any data you would like
          example:
            some_key: some_value
          title: Meta
          type: object
        user_uuid:
          title: User Uuid
          type: string
        uuid:
          title: Uuid
          type: string
      required:
      - uuid
      title: ParticipantUpdate
      type: object
    ParticipantUserReturn:
      description: "Contains all fields required when doing a Participant GET but\
        \ also has user fields (name, location, ect). This is\nwhat is returned from\
        \ all participant endpoints."
      example:
        country: Canada
        verified_legal_terms: true
        date_updated: 2000-01-23T04:56:07.000+00:00
        participant_meta:
          some_key: some_value
        last_login: 2000-01-23T04:56:07.000+00:00
        date_created: 2000-01-23T04:56:07.000+00:00
        last_name: Doe
        uuid: uuid
        picture: picture
        gps_location:
          lat: 10
          lng: -10
        user_uuid: user_uuid
        phone_number: 306-555-5555
        first_name: Jane
        email: example@test.com
      properties:
        uuid:
          title: Uuid
          type: string
        user_uuid:
          title: User Uuid
          type: string
        participant_meta:
          example:
            some_key: some_value
          title: Participant Meta
          type: object
        first_name:
          example: Jane
          title: First Name
          type: string
        last_name:
          example: Doe
          title: Last Name
          type: string
        email:
          $ref: '#/components/schemas/Email'
        phone_number:
          example: 306-555-5555
          title: Phone Number
          type: string
        country:
          example: Canada
          title: Country
          type: string
        gps_location:
          example:
            lat: 10
            lng: -10
          title: Gps Location
          type: object
        picture:
          title: Picture
          type: string
        last_login:
          format: date-time
          title: Last Login
          type: string
        verified_legal_terms:
          title: Verified Legal Terms
          type: boolean
        date_created:
          format: date-time
          title: Date Created
          type: string
        date_updated:
          format: date-time
          title: Date Updated
          type: string
      title: ParticipantUserReturn
      type: object
    Payment:
      example:
        amount: 0
      properties:
        amount:
          title: Amount
          type: integer
      required:
      - amount
      title: Payment
      type: object
    PaymentMethodResponse:
      example:
        project_uuid: project_uuid
        last_4_digits: last_4_digits
        payment_id: payment_id
        card_brand: card_brand
      properties:
        payment_id:
          title: Payment Id
          type: string
        last_4_digits:
          title: Last 4 Digits
          type: string
        card_brand:
          title: Card Brand
          type: string
        project_uuid:
          title: Project Uuid
          type: string
      required:
      - card_brand
      - last_4_digits
      - payment_id
      - project_uuid
      title: PaymentMethodResponse
      type: object
    ProjectDB:
      description: Used for DB row entry
      example:
        max_spend: 6
        archived_at: archived_at
        name: name
        project_status: project_status
        created_at: created_at
        current_spend: 0
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        name:
          title: Name
          type: string
        created_at:
          title: Created At
          type: string
        current_spend:
          title: Current Spend
          type: integer
        max_spend:
          title: Max Spend
          type: integer
        project_status:
          title: Project Status
          type: string
        archived_at:
          title: Archived At
          type: string
      required:
      - created_at
      - current_spend
      - max_spend
      - name
      - project_status
      - uuid
      title: ProjectDB
      type: object
    ProjectsProjectCreate:
      description: Used for create endpoint
      example:
        name: name
      properties:
        name:
          title: Name
          type: string
      required:
      - name
      title: ProjectsProjectCreate
      type: object
    ProjectsProjectGet:
      description: Used for get endpoint
      example:
        archived_at: archived_at
        name: name
        uuid: uuid
        status: status
      properties:
        uuid:
          title: Uuid
          type: string
        name:
          title: Name
          type: string
        status:
          title: Status
          type: string
        archived_at:
          title: Archived At
          type: string
      required:
      - name
      - uuid
      title: ProjectsProjectGet
      type: object
    ProjectsProjectMemberDB:
      example:
        project_uuid: project_uuid
        entity_uuid: entity_uuid
        role: role
        created_at: created_at
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        project_uuid:
          title: Project Uuid
          type: string
        entity_uuid:
          title: Entity Uuid
          type: string
        role:
          title: Role
          type: string
        created_at:
          title: Created At
          type: string
      required:
      - created_at
      - entity_uuid
      - project_uuid
      - role
      - uuid
      title: ProjectsProjectMemberDB
      type: object
    ProjectsProjectUpdate:
      description: Used for update endpoint
      example:
        max_spend: 0
        status: status
      properties:
        max_spend:
          title: Max Spend
          type: integer
        status:
          title: Status
          type: string
      title: ProjectsProjectUpdate
      type: object
    ProjectsProjectUsageDB:
      example:
        project_uuid: project_uuid
        quantity: 1
        month: 6
        updated_at: updated_at
        year: 0
        estimated_cost: 5
        usage_key: usage_key
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        project_uuid:
          title: Project Uuid
          type: string
        usage_key:
          title: Usage Key
          type: string
        year:
          title: Year
          type: integer
        month:
          title: Month
          type: integer
        quantity:
          title: Quantity
          type: integer
        estimated_cost:
          title: Estimated Cost
          type: integer
        updated_at:
          title: Updated At
          type: string
      required:
      - estimated_cost
      - month
      - project_uuid
      - quantity
      - updated_at
      - usage_key
      - uuid
      - year
      title: ProjectsProjectUsageDB
      type: object
    ProjectsUsageTypeCreate:
      description: Used for create endpoint
      example:
        summary: summary
        unit_prices:
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        service: service
        name: name
        category: category
        key: key
      properties:
        key:
          title: Key
          type: string
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
        category:
          title: Category
          type: string
        service:
          title: Service
          type: string
        unit_prices:
          items:
            $ref: '#/components/schemas/ProjectsUsageTypeUnitPrice'
          title: Unit Prices
          type: array
      required:
      - category
      - key
      - name
      - service
      - summary
      - unit_prices
      title: ProjectsUsageTypeCreate
      type: object
    ProjectsUsageTypeDB:
      description: Used for DB row entry
      example:
        summary: summary
        unit_prices:
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        service: service
        name: name
        category: category
        key: key
      properties:
        key:
          title: Key
          type: string
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
        category:
          title: Category
          type: string
        service:
          title: Service
          type: string
        unit_prices:
          items:
            $ref: '#/components/schemas/ProjectsUsageTypeUnitPrice'
          title: Unit Prices
          type: array
      required:
      - category
      - key
      - name
      - service
      - summary
      - unit_prices
      title: ProjectsUsageTypeDB
      type: object
    ProjectsUsageTypeGet:
      description: Used for get endpoint
      example:
        summary: summary
        unit_prices:
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        service: service
        name: name
        category: category
        key: key
      properties:
        key:
          title: Key
          type: string
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
        category:
          title: Category
          type: string
        service:
          title: Service
          type: string
        unit_prices:
          items:
            $ref: '#/components/schemas/ProjectsUsageTypeUnitPrice'
          title: Unit Prices
          type: array
      required:
      - category
      - key
      - name
      - service
      - summary
      - unit_prices
      title: ProjectsUsageTypeGet
      type: object
    ProjectsUsageTypeUnitPrice:
      example:
        max_quantity: 6
        min_quantity: 0
        unit_price: 1
      properties:
        min_quantity:
          title: Min Quantity
          type: integer
        max_quantity:
          title: Max Quantity
          type: integer
        unit_price:
          title: Unit Price
          type: integer
      required:
      - max_quantity
      - min_quantity
      - unit_price
      title: ProjectsUsageTypeUnitPrice
      type: object
    ProjectsUsageTypeUpdate:
      description: Used for update endpoint
      example:
        summary: summary
        unit_prices:
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        - max_quantity: 6
          min_quantity: 0
          unit_price: 1
        service: service
        name: name
        category: category
      properties:
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
        category:
          title: Category
          type: string
        service:
          title: Service
          type: string
        unit_prices:
          items:
            $ref: '#/components/schemas/ProjectsUsageTypeUnitPrice'
          title: Unit Prices
          type: array
      title: ProjectsUsageTypeUpdate
      type: object
    SecurityCreateToken:
      example:
        length: 0
      properties:
        length:
          default: 64
          title: Length
          type: integer
      title: SecurityCreateToken
      type: object
    SecurityEncryptionKeyGet:
      example:
        created_at: created_at
        retrieved_at: retrieved_at
        category: category
        key: key
      properties:
        key:
          title: Key
          type: string
        category:
          title: Category
          type: string
        created_at:
          title: Created At
          type: string
        retrieved_at:
          title: Retrieved At
          type: string
      required:
      - category
      - created_at
      - key
      - retrieved_at
      title: SecurityEncryptionKeyGet
      type: object
    SecurityEncryptionKeyResponse:
      example:
        created_at: created_at
        retrieved_at: retrieved_at
        category: category
        uuid: uuid
        deleted_at: deleted_at
        key: ""
      properties:
        uuid:
          title: Uuid
          type: string
        key:
          format: binary
          title: Key
          type: string
        category:
          title: Category
          type: string
        deleted_at:
          title: Deleted At
          type: string
        created_at:
          title: Created At
          type: string
        retrieved_at:
          title: Retrieved At
          type: string
      required:
      - category
      - created_at
      - deleted_at
      - key
      - retrieved_at
      - uuid
      title: SecurityEncryptionKeyResponse
      type: object
    SecurityKeyCreate:
      description: Used for create endpoint
      example:
        summary: summary
        name: name
      properties:
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
      required:
      - name
      - summary
      title: SecurityKeyCreate
      type: object
    SecurityKeyGet:
      description: Used for get endpoint
      example:
        summary: summary
        last_used_at: last_used_at
        access: access
        name: name
        created_at: created_at
        uuid: uuid
      properties:
        uuid:
          title: Uuid
          type: string
        access:
          title: Access
          type: string
        name:
          title: Name
          type: string
        summary:
          title: Summary
          type: string
        created_at:
          title: Created At
          type: string
        last_used_at:
          title: Last Used At
          type: string
      required:
      - access
      - created_at
      - last_used_at
      - name
      - summary
      - uuid
      title: SecurityKeyGet
      type: object
    SecurityKeyVerify:
      description: Used for verify key endpoint
      example:
        access: access
        secret: secret
      properties:
        access:
          title: Access
          type: string
        secret:
          title: Secret
          type: string
      required:
      - access
      - secret
      title: SecurityKeyVerify
      type: object
    ServiceCreate:
      example:
        summary: summary
        name: name
        version: version
        author_emails:
        - author_emails
        - author_emails
        key: key
        authors:
        - authors
        - authors
      properties:
        name:
          title: Name
          type: string
        key:
          title: Key
          type: string
        version:
          title: Version
          type: string
        summary:
          title: Summary
          type: string
        authors:
          items:
            type: string
          title: Authors
          type: array
        author_emails:
          items:
            type: string
          title: Author Emails
          type: array
      required:
      - author_emails
      - authors
      - key
      - name
      - summary
      - version
      title: ServiceCreate
      type: object
    ServiceMessageResponse:
      example:
        message: message
      properties:
        message:
          title: Message
          type: string
      required:
      - message
      title: ServiceMessageResponse
      type: object
    ServiceResponse:
      example:
        summary: summary
        heartbeats:
        - ""
        - ""
        updated_at: updated_at
        hidden_stages:
        - hidden_stages
        - hidden_stages
        alarms:
        - severity: severity
          ticket_uuid: ticket_uuid
          summary: summary
          acknowledger_uuid: acknowledger_uuid
          note:
          - "{}"
          - "{}"
          process: process
          ignored_at: ignored_at
          terminater_uuid: terminater_uuid
          count: 0
          description: description
          created_at: created_at
          ignorer_uuid: ignorer_uuid
          latest_at: latest_at
          uuid: uuid
          service_uuid: service_uuid
          assignee_uuid: assignee_uuid
          stage: stage
          name: name
          cleared_at: cleared_at
          acknowledged_at: acknowledged_at
          terminated_at: terminated_at
        - severity: severity
          ticket_uuid: ticket_uuid
          summary: summary
          acknowledger_uuid: acknowledger_uuid
          note:
          - "{}"
          - "{}"
          process: process
          ignored_at: ignored_at
          terminater_uuid: terminater_uuid
          count: 0
          description: description
          created_at: created_at
          ignorer_uuid: ignorer_uuid
          latest_at: latest_at
          uuid: uuid
          service_uuid: service_uuid
          assignee_uuid: assignee_uuid
          stage: stage
          name: name
          cleared_at: cleared_at
          acknowledged_at: acknowledged_at
          terminated_at: terminated_at
        name: name
        created_at: created_at
        version: version
        author_emails:
        - author_emails
        - author_emails
        uuid: uuid
        key: key
        authors:
        - authors
        - authors
      properties:
        name:
          title: Name
          type: string
        key:
          title: Key
          type: string
        version:
          title: Version
          type: string
        summary:
          title: Summary
          type: string
        authors:
          items:
            type: string
          title: Authors
          type: array
        author_emails:
          items:
            type: string
          title: Author Emails
          type: array
        uuid:
          title: Uuid
          type: string
        heartbeats:
          items: {}
          title: Heartbeats
          type: array
        alarms:
          items:
            $ref: '#/components/schemas/AlarmResponse'
          title: Alarms
          type: array
        hidden_stages:
          default: []
          items:
            type: string
          title: Hidden Stages
          type: array
        created_at:
          title: Created At
          type: string
        updated_at:
          title: Updated At
          type: string
      required:
      - author_emails
      - authors
      - key
      - name
      - summary
      - version
      title: ServiceResponse
      type: object
    StatsVitalsResponse:
      example:
        service_uuid: service_uuid
        stats: "{}"
        created_at: created_at
        uuid: uuid
        heartbeat_uuid: heartbeat_uuid
        vitals: "{}"
      properties:
        uuid:
          title: Uuid
          type: string
        service_uuid:
          title: Service Uuid
          type: string
        heartbeat_uuid:
          title: Heartbeat Uuid
          type: string
        stats:
          title: Stats
          type: object
        vitals:
          title: Vitals
          type: object
        created_at:
          title: Created At
          type: string
      required:
      - heartbeat_uuid
      - service_uuid
      title: StatsVitalsResponse
      type: object
    StripeAccountResponse:
      example:
        project_uuid: project_uuid
        stripe_customer_id: stripe_customer_id
        last_name: last_name
        first_name: first_name
      properties:
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        project_uuid:
          title: Project Uuid
          type: string
        stripe_customer_id:
          title: Stripe Customer Id
          type: string
      required:
      - first_name
      - last_name
      - project_uuid
      - stripe_customer_id
      title: StripeAccountResponse
      type: object
    StripeCustomerSecretResponse:
      example:
        secret: secret
      properties:
        secret:
          title: Secret
          type: string
      required:
      - secret
      title: StripeCustomerSecretResponse
      type: object
    TicketResponse:
      example:
        subject: subject
        ticket_id: ticket_id
        contact_id: contact_id
        priority: priority
      properties:
        ticket_id:
          title: Ticket Id
          type: string
        contact_id:
          title: Contact Id
          type: string
        subject:
          title: Subject
          type: string
        priority:
          title: Priority
          type: string
      required:
      - contact_id
      - priority
      - subject
      - ticket_id
      title: TicketResponse
      type: object
    TicketsResponse:
      example:
        subject: subject
        priority: priority
        ticket_id: ticket_id
      properties:
        subject:
          title: Subject
          type: string
        priority:
          title: Priority
          type: string
        ticket_id:
          title: Ticket Id
          type: string
      required:
      - priority
      - subject
      - ticket_id
      title: TicketsResponse
      type: object
    User:
      description: "User object, contains all required parameters"
      example:
        country: country
        verified_legal_terms: false
        date_updated: 2000-01-23T04:56:07.000+00:00
        date_deleted: 2000-01-23T04:56:07.000+00:00
        date_created: 2000-01-23T04:56:07.000+00:00
        last_login: 2000-01-23T04:56:07.000+00:00
        last_name: last_name
        cognito_data: "{}"
        uuid: uuid
        picture: picture
        first_login: true
        gps_location: "{}"
        cognito_id: cognito_id
        phone_number: phone_number
        first_name: first_name
        email: email
      properties:
        cognito_id:
          title: Cognito Id
          type: string
        cognito_data:
          title: Cognito Data
          type: object
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        email:
          title: Email
          type: string
        phone_number:
          title: Phone Number
          type: string
        country:
          title: Country
          type: string
        picture:
          title: Picture
          type: string
        gps_location:
          title: Gps Location
          type: object
        verified_legal_terms:
          default: false
          title: Verified Legal Terms
          type: boolean
        date_created:
          format: date-time
          title: Date Created
          type: string
        date_updated:
          format: date-time
          title: Date Updated
          type: string
        date_deleted:
          format: date-time
          title: Date Deleted
          type: string
        uuid:
          title: Uuid
          type: string
        last_login:
          format: date-time
          title: Last Login
          type: string
        first_login:
          default: true
          title: First Login
          type: boolean
      required:
      - uuid
      title: User
      type: object
    UserConfirmation:
      description: Information to confirm user
      example:
        verification_code: verification_code
        email: email
      properties:
        email:
          title: Email
          type: string
        verification_code:
          title: Verification Code
          type: string
      required:
      - email
      - verification_code
      title: UserConfirmation
      type: object
    UserEmail:
      description: User email information
      example:
        address: address
        verified: false
      properties:
        address:
          title: Address
          type: string
        verified:
          default: false
          title: Verified
          type: boolean
      title: UserEmail
      type: object
    UserFlags:
      description: Flags that may be attached to a user
      example:
        missing_data: false
        newsletters: false
        requires_tour: false
        legal_updates: false
      properties:
        requires_tour:
          default: false
          title: Requires Tour
          type: boolean
        missing_data:
          default: false
          title: Missing Data
          type: boolean
        legal_updates:
          default: false
          title: Legal Updates
          type: boolean
        newsletters:
          default: false
          title: Newsletters
          type: boolean
      title: UserFlags
      type: object
    UserLogin:
      description: Password and username required to login
      example:
        password: password
        username: username
      properties:
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
      required:
      - password
      - username
      title: UserLogin
      type: object
    UserLoginReturn:
      description: "Tokens (refresh, access, identity, ect)"
      example:
        IdToken: IdToken
        ExpiresIn: 0
        TokenType: TokenType
        RefreshToken: RefreshToken
        AccessToken: AccessToken
      properties:
        AccessToken:
          title: Accesstoken
          type: string
        ExpiresIn:
          title: Expiresin
          type: integer
        TokenType:
          title: Tokentype
          type: string
        IdToken:
          title: Idtoken
          type: string
        RefreshToken:
          title: Refreshtoken
          type: string
      required:
      - AccessToken
      - ExpiresIn
      - IdToken
      - RefreshToken
      - TokenType
      title: UserLoginReturn
      type: object
    UserPasswordReset:
      description: Information used for resetting the password
      example:
        email: email
      properties:
        email:
          title: Email
          type: string
      required:
      - email
      title: UserPasswordReset
      type: object
    UserPasswordResetConfirmation:
      description: Information for resetting the new password with a confirmation
        code
      example:
        password: password
        confirmation_code: confirmation_code
        email: email
      properties:
        email:
          title: Email
          type: string
        confirmation_code:
          title: Confirmation Code
          type: string
        password:
          title: Password
          type: string
      required:
      - confirmation_code
      - email
      - password
      title: UserPasswordResetConfirmation
      type: object
    UserResponse:
      description: When retrieving a user
      example:
        country: Canada
        verified_legal_terms: false
        date_updated: 2000-01-23T04:56:07.000+00:00
        date_deleted: 2000-01-23T04:56:07.000+00:00
        date_created: 2000-01-23T04:56:07.000+00:00
        last_login: last_login
        flags:
          missing_data: false
          newsletters: false
          requires_tour: false
          legal_updates: false
        last_name: Doe
        uuid: uuid
        picture: picture
        gps_location:
          lat: 10
          lng: -10
        missing:
        - missing
        - missing
        phone_number: 306-555-5555
        first_name: Jane
        email:
          address: address
          verified: false
        participants:
        - "{}"
        - "{}"
      properties:
        first_name:
          example: Jane
          title: First Name
          type: string
        last_name:
          example: Doe
          title: Last Name
          type: string
        phone_number:
          example: 306-555-5555
          title: Phone Number
          type: string
        country:
          example: Canada
          title: Country
          type: string
        picture:
          title: Picture
          type: string
        gps_location:
          example:
            lat: 10
            lng: -10
          title: Gps Location
          type: object
        verified_legal_terms:
          default: false
          title: Verified Legal Terms
          type: boolean
        date_created:
          format: date-time
          title: Date Created
          type: string
        date_updated:
          format: date-time
          title: Date Updated
          type: string
        date_deleted:
          format: date-time
          title: Date Deleted
          type: string
        email:
          $ref: '#/components/schemas/UserEmail'
        missing:
          items:
            type: string
          title: Missing
          type: array
        uuid:
          title: Uuid
          type: string
        participants:
          items:
            type: object
          title: Participants
          type: array
        flags:
          $ref: '#/components/schemas/UserFlags'
        last_login:
          title: Last Login
          type: string
      title: UserResponse
      type: object
    UserSignup:
      description: User information used for user signup
      example:
        country: country
        verified_legal_terms: false
        password: password
        newsletters: true
        lng: lng
        last_name: last_name
        phone_number: phone_number
        first_name: first_name
        email: email
        lat: lat
        picture: picture
        username: username
      properties:
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
        email:
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        phone_number:
          title: Phone Number
          type: string
        country:
          title: Country
          type: string
        lat:
          title: Lat
          type: string
        lng:
          title: Lng
          type: string
        verified_legal_terms:
          default: false
          title: Verified Legal Terms
          type: boolean
        picture:
          title: Picture
          type: string
        newsletters:
          title: Newsletters
          type: boolean
      required:
      - country
      - email
      - first_name
      - last_name
      - password
      - phone_number
      - username
      title: UserSignup
      type: object
    UserSignupReturn:
      description: Default participant UUID
      example:
        participant_uuid: participant_uuid
      properties:
        participant_uuid:
          title: Participant Uuid
          type: string
      required:
      - participant_uuid
      title: UserSignupReturn
      type: object
    UserTokenReturn:
      description: "Tokens, naming scheme based off of cognito return fields"
      example:
        IdToken: IdToken
        ExpiresIn: 0
        TokenType: TokenType
        AccessToken: AccessToken
      properties:
        AccessToken:
          title: Accesstoken
          type: string
        ExpiresIn:
          title: Expiresin
          type: integer
        TokenType:
          title: Tokentype
          type: string
        IdToken:
          title: Idtoken
          type: string
      required:
      - AccessToken
      - ExpiresIn
      - IdToken
      - TokenType
      title: UserTokenReturn
      type: object
    UserValidations:
      description: Fields used to validate a user's field
      example:
        validation_type: validation_type
        value: value
      properties:
        value:
          title: Value
          type: string
        validation_type:
          title: Validation Type
          type: string
      required:
      - validation_type
      - value
      title: UserValidations
      type: object
    getAppointment_403_response:
      example:
        message: Error message
      properties:
        message:
          type: string
      type: object
    Response_Archiveproject:
      example:
        message: Archived project
      properties:
        message:
          type: string
      title: Response Archiveproject
      type: object
    Response_Deleteusagetype:
      example:
        message: Deleted usage_type
      properties:
        message:
          type: string
      title: Response Deleteusagetype
      type: object
    Response_Addmembertoproject:
      example:
        message: Member added
      properties:
        message:
          type: string
      title: Response Addmembertoproject
      type: object
    Response_Removememberfromproject:
      example:
        message: Member removed
      properties:
        message:
          type: string
      title: Response Removememberfromproject
      type: object
    Response_Generatetoken:
      example:
        message: Token
      properties:
        message:
          type: string
      title: Response Generatetoken
      type: object
    Response_Createkey:
      example:
        message:
          uuid: key_uuid
          access: access token
          secret: secret token
      properties:
        message:
          type: string
      title: Response Createkey
      type: object
    Response_Deletekey:
      example:
        message: Deleted key
      properties:
        message:
          type: string
      title: Response Deletekey
      type: object
    Basic:
      allOf:
      - $ref: '#/components/schemas/BasicMeta'
      title: Basic
    Detailed:
      allOf:
      - $ref: '#/components/schemas/DetailedMeta'
      title: Detailed
    Company:
      allOf:
      - $ref: '#/components/schemas/CompanyBase'
      title: Company
    Email:
      allOf:
      - $ref: '#/components/schemas/UserEmail'
      example: example@test.com
      title: Email

