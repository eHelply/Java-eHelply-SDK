/*
 * eHelply SDK - 1.1.99
 * eHelply SDK for SuperStack Services
 *
 * The version of the OpenAPI document: 1.1.99
 * Contact: support@ehelply.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ehelply.client.api;

import com.ehelply.client.ApiException;
import com.ehelply.client.model.Field;
import com.ehelply.client.model.FieldDynamo;
import com.ehelply.client.model.HTTPValidationError;
import com.ehelply.client.model.MetaCreate;
import com.ehelply.client.model.MetaDynamo;
import com.ehelply.client.model.MetaGet;
import com.ehelply.client.model.MetaSlugger;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetaApi
 */
@Disabled
public class MetaApiTest {

    private final MetaApi api = new MetaApi();

    /**
     * Create Field
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createFieldTest() throws ApiException {
        Field field = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        FieldDynamo response = api.createField(field, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Create Meta
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMetaTest() throws ApiException {
        String service = null;
        String typeStr = null;
        String entityUuid = null;
        MetaCreate metaCreate = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        MetaDynamo response = api.createMeta(service, typeStr, entityUuid, metaCreate, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Delete Field
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteFieldTest() throws ApiException {
        String fieldUuid = null;
        Boolean softDelete = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        Object response = api.deleteField(fieldUuid, softDelete, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Delete Meta
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMetaTest() throws ApiException {
        String service = null;
        String typeStr = null;
        String entityUuid = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        Object response = api.deleteMeta(service, typeStr, entityUuid, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Delete Meta From Uuid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteMetaFromUuidTest() throws ApiException {
        String metaUuid = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        Object response = api.deleteMetaFromUuid(metaUuid, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Get Field
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFieldTest() throws ApiException {
        String fieldUuid = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        FieldDynamo response = api.getField(fieldUuid, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Get Meta
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetaTest() throws ApiException {
        String service = null;
        String typeStr = null;
        String entityUuid = null;
        Boolean detailed = null;
        Boolean custom = null;
        Boolean dates = null;
        Integer history = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        MetaGet response = api.getMeta(service, typeStr, entityUuid, detailed, custom, dates, history, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Get Meta From Uuid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMetaFromUuidTest() throws ApiException {
        String metaUuid = null;
        Boolean detailed = null;
        Boolean custom = null;
        Boolean dates = null;
        Integer history = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        MetaGet response = api.getMetaFromUuid(metaUuid, detailed, custom, dates, history, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Make Slug
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void makeSlugTest() throws ApiException {
        MetaSlugger metaSlugger = null;
        Object response = api.makeSlug(metaSlugger);
        // TODO: test validations
    }

    /**
     * Touch Meta
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void touchMetaTest() throws ApiException {
        String service = null;
        String typeStr = null;
        String entityUuid = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        MetaDynamo response = api.touchMeta(service, typeStr, entityUuid, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Update Field
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateFieldTest() throws ApiException {
        String fieldUuid = null;
        Field field = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        Object response = api.updateField(fieldUuid, field, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Update Meta
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMetaTest() throws ApiException {
        String service = null;
        String typeStr = null;
        String entityUuid = null;
        MetaCreate metaCreate = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        MetaDynamo response = api.updateMeta(service, typeStr, entityUuid, metaCreate, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

    /**
     * Update Meta From Uuid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMetaFromUuidTest() throws ApiException {
        String metaUuid = null;
        MetaCreate metaCreate = null;
        String xAccessToken = null;
        String xSecretToken = null;
        String authorization = null;
        String ehelplyActiveParticipant = null;
        String ehelplyProject = null;
        String ehelplyData = null;
        MetaDynamo response = api.updateMetaFromUuid(metaUuid, metaCreate, xAccessToken, xSecretToken, authorization, ehelplyActiveParticipant, ehelplyProject, ehelplyData);
        // TODO: test validations
    }

}
